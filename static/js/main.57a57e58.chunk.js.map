{"version":3,"sources":["components/mapApps/BeaverObservation/MapPopup.tsx","lib/stylebuild.ts","config.ts","components/mapApps/BeaverObservation/BeaverObservation.tsx","components/mapApps/BeaverObservation/BeaverObservation.style.ts","components/mapApps/BeaverObservation/BeaverObservation.mapStyle.ts","components/mapApps/VBET/VBET.mapStyle.ts","components/mapApps/VBET/VBET.tsx","components/mapApps/VBET/VBET.style.ts","components/mapApps/BRAT/StateChooser.tsx","components/mapApps/BRAT/BRAT.mapstyle.ts","components/mapApps/BRAT/Chart.tsx","components/mapApps/BRAT/MapMenu.tsx","components/mapApps/BRAT/BRAT.tsx","components/mapApps/BRAT/BRAT.style.ts","components/mapApps/index.ts","components/mapApps/BRAT/index.tsx","components/MapsTopbar.tsx","themes.ts","components/AppWrapper.tsx","components/MapChooser.tsx","components/App.connect.tsx","serviceWorker.ts","index.tsx"],"names":["MapPopup","latitude","longitude","feature","onClose","meta","JSON","parse","properties","closeButton","closeOnClick","anchor","Typography","variant","component","Object","keys","map","k","idx","key","combineStyles","base","merge","log","debug","sources","layers","mapConfig","process","version","REACT_APP_VERSION","redirectUrl","REACT_APP_GRAPHQL","REACT_APP_CDN","URL","endsWith","window","location","origin","awsAuth","Auth","region","userPoolId","userPoolWebClientId","mandatorySignIn","oauth","domain","scope","redirectSignIn","redirectSignOut","responseType","useStyles","makeStyles","theme","root","height","mapContainer","mapMenuContainer","left","spacing","top","formControl","marginTop","VBET","state","classes","useState","loading","setLoading","popup","setPopup","tileCapabilities","setTileCapabilities","mapSettings","setMapSettings","baseLayer","setBaseLayer","mapBoxRef","useRef","curZoomRef","useEffect","url","fetch","then","res","json","tileJSON","bounds","tegolaTiles","maxZoom","minZoom","zoom","catch","err","console","error","finalStyle","useMemo","bs","info","dark","observations","tiles","type","minzoom","maxzoom","id","source","layout","paint","name","metadata","sprite","glyphs","created","modified","visibility","draft","mapStyles","DefaultMapStyles","style","loadIcon","useCallback","iconName","Promise","resolve","reject","hasImage","loadImage","image","addImage","handeMapLoad","forEach","icKey","current","saveMapState","getZoom","getCenter","lat","lng","className","lockToBounds","mapBoxToken","reactMapGLProps","interactiveLayerIds","onClick","data","features","length","viewport","onViewportChange","size","projection","lngLat","currStyle","setCurrStyle","menuVals","showHillshade","vbetSources","reduce","acc","vbs","sourceName","vbetLayers","accLayers","mvk","newStyles","vector_layers","fillColor","lineColor","hillshade","rasterTiles","Hillshade","scheme","tileSize","contextSource","js","android","ios","owner","setHillshade","setMenuVals","urlPromises","tileset","d","menuName","parseInt","center","all","darr","Math","min","max","color","FormControl","FormLabel","FormGroup","mtObj","FormControlLabel","newVals","handleChange","control","Checkbox","checked","Boolean","label","legend","container","display","flexDirection","spacer","flexGrow","padding","margin","logo","logoContainer","textAlign","StateChooser","maps","changeMaps","Container","maxWidth","Paper","elevation","src","alt","List","p","ListItem","button","divider","ListItemAvatar","Avatar","title","substr","ListItemText","primary","baseBratLayer","oPBRCUI","jsonFieldName","unit","lookup","value","layer","oPBRCR","radioOptionsArr","order","thresh","getRadioLayer","layerKey","bratLayer","find","bl","interactive","Chart","currHuc8","radioVal","chartDataValues","HUC8","chartData","leg","reverse","NAME","yType","width","colorType","colorDomain","dt","colorRange","hideTicks","x","y","withStyles","optLabel","marginBottom","setRadioIdx","allVals","RadioGroup","group","onChange","e","rval","Radio","position","BRAT","setChartData","setRadioVal","mapLayers","setMapLayers","marker","setMarker","setCurrHuc8","currLayer","huc8summary","bratUrl","bratSourceTiles","contextUrl","contextSourceTiles","resultArr","brat","context","lookups","censusSource","radioLayers","bratSource","damCensus","filter","getBratStyle","census","onHover","feats","bratFeatures","feat","sourceLayer","censusFeatures","hucFeature","getFeats","setFilter","clickRadius","onPointerMove","preventDefault","stopPropagation","onMouseEnter","onMouseOver","val","rl","getLayer","removeLayer","addLayer","svgArc","transform","viewBox","cx","cy","r","fill","strokeWidth","stroke","lookupVal","Fragment","Divider","ReachID","numeral","format","BeaverObservation","history","bratStates","setBratStates","toolUrl","stateUrl","pathname","split","s","href","pName","push","alignItems","textShadow","backgroundImage","backgroundRepeat","backgroundPosition","backgroundSize","backgroundColor","marginRight","TopBar","signOutHandler","AppBar","Toolbar","disableGutters","Button","home","palette","main","indigo","secondary","orange","contrastText","text","homeDark","createMuiTheme","AppWrapper","children","signOut","containerProps","ThemeProvider","themes","noScroll","fullWidth","topbar","MapsTopbar","MapChooser","devSetup","AppConnect","setMaps","stateObj","setStateObj","useHosted","isAuthenticated","document","undefined","response","responseJson","logoSVG","mapRendered","message","isLocalhost","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","require","ReactDOM","render","basename","path","props","getElementById","addEventListener","headers","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","pushState","storage","persist","granted","warn"],"mappings":"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","file":"static/js/main.57a57e58.chunk.js","sourcesContent":["import React from 'react'\n\nimport Typography from '@material-ui/core/Typography'\nimport { Popup } from 'react-map-gl'\n\n// import { makeStyles } from '@material-ui/core/styles'\n\n// import style from './BeaverObservation.style'\n// import log from 'loglevel'\n// import moment from 'moment'\n\n// const useStyles = makeStyles(style)\n\nexport interface Props {\n    latitude: number\n    longitude: number\n    feature: any\n    onClose: () => void\n}\n/**\n * This is the over-arching wrapper for the app. It combines all the\n * necessary pieces\n */\nconst MapPopup: React.FC<Props> = ({ latitude, longitude, feature, onClose }: Props) => {\n    // const classes = useStyles()\n    const meta = JSON.parse(feature.properties['metadata'])\n    return (\n        <Popup longitude={longitude} latitude={latitude} closeButton closeOnClick onClose={onClose} anchor=\"top\">\n            <Typography variant=\"subtitle1\" component=\"div\">\n                {feature.properties['obs_type']}\n            </Typography>\n            {Object.keys(meta).map((k, idx) => (\n                <Typography key={`prop-${idx}`} variant=\"caption\" component=\"div\">\n                    <strong>{k}</strong>: {meta[k]}\n                </Typography>\n            ))}\n        </Popup>\n    )\n}\n\nexport default MapPopup\n","import log from 'loglevel'\n\nexport function combineStyles(base: any, merge: any): any {\n    log.debug('combineStyles', { base, merge })\n    return {\n        ...base,\n        sources: {\n            ...base.sources,\n            ...merge.sources\n        },\n        layers: [...base.layers, ...merge.layers]\n    }\n}\n","export default {\n    // Bright Pastel\n    tagColors: [\n        '#418CF0',\n        '#FCB441',\n        '#E0400A',\n        '#056492',\n        '#BFBFBF',\n        '#1A3B69',\n        '#FFE382',\n        '#129CDD',\n        '#CA6B4B',\n        '#005CDB',\n        '#F3D288',\n        '#506381',\n        '#F1B9A8',\n        '#E0830A',\n        '#7893BE'\n    ]\n}\n\nexport const mapConfig = {\n    mapBoxToken: process.env.REACT_APP_MAPBOX_TOKEN\n    // styles: require('./components/styles')\n}\n\nexport const version = process.env.REACT_APP_VERSION\n\nexport const warehouseIconUrl = process.env.PUBLIC_URL + '/RiverscapesLogo.png'\n\nexport const endpoints = {\n    graphql: process.env.REACT_APP_GRAPHQL,\n    cdn: process.env.REACT_APP_CDN\n}\n\nexport const redirectUrl = new URL(\n    process.env.PUBLIC_URL.endsWith('/') ? process.env.PUBLIC_URL : process.env.PUBLIC_URL + '/',\n    window.location.origin\n)\n\nexport const awsAuth = {\n    Auth: {\n        region: process.env.REACT_APP_AWS_REGION_DEPLOY,\n        userPoolId: process.env.REACT_APP_AWS_USERPOOLID,\n        userPoolWebClientId: process.env.REACT_APP_AWS_USERPOOLWEBCLIENTID,\n        mandatorySignIn: true,\n        oauth: {\n            domain: process.env.REACT_APP_HOSTED_DOMAIN,\n            scope: ['email', 'profile', 'openid'],\n            redirectSignIn: redirectUrl,\n            redirectSignOut: redirectUrl,\n            responseType: 'code'\n        }\n    }\n}\n","import React, { useState, useMemo, useRef, useEffect, useCallback } from 'react'\n\nimport { BaseMap, StyleButtons, MapStyles as DefaultMapStyles } from '@northarrowresearch/react-maps'\nimport MapPopup from './MapPopup'\nimport { makeStyles } from '@material-ui/core/styles'\n\nimport { combineStyles } from '../../../lib/stylebuild'\nimport { MapType } from '../../../types'\nimport { mapConfig } from '../../../config'\nimport style from './BeaverObservation.style'\nimport mapStyles from './BeaverObservation.mapStyle'\nimport log from 'loglevel'\n\nconst useStyles = makeStyles(style)\n\nexport interface Props {\n    state: MapType\n}\n/**\n * This is the over-arching wrapper for the app. It combines all the\n * necessary pieces\n */\nconst VBET: React.FC<Props> = ({ state }: Props) => {\n    const classes = useStyles()\n    const [loading, setLoading] = useState<boolean>(true)\n    const [popup, setPopup] = useState<any>()\n    const [tileCapabilities, setTileCapabilities] = useState<any>()\n    const [mapSettings, setMapSettings] = useState<any>()\n    const [baseLayer, setBaseLayer] = useState<number>(2)\n    const mapBoxRef = useRef()\n    const curZoomRef = useRef()\n\n    useEffect(() => {\n        if (!loading) return\n        const url = `${process.env.REACT_APP_PUBLIC_TEGOLA}/capabilities/observations`\n        fetch(url)\n            .then((res) => res.json())\n            .then((tileJSON) => {\n                setTileCapabilities(tileJSON)\n                const bounds = (state.tegolaTiles['observations'] as any).bounds as number[]\n                setMapSettings({\n                    bounds,\n                    maxZoom: 20, //tileJSON.maxzoom\n                    minZoom: 6,\n                    zoom: 6.1,\n                    latitude: (bounds[1] + bounds[3]) / 2,\n                    longitude: (bounds[0] + bounds[2]) / 2\n                })\n            })\n            .catch((err) => console.error(err))\n            .then(() => setLoading(false))\n    }, [state.tegolaTiles, loading])\n\n    const finalStyle = useMemo(() => {\n        if (!tileCapabilities) return null\n        const bs = mapStyles(tileCapabilities, baseLayer)\n        return combineStyles(DefaultMapStyles[baseLayer].style, bs)\n    }, [baseLayer, tileCapabilities])\n\n    const loadIcon = useCallback((map: any, iconName: string): Promise<void> => {\n        const url = `${process.env['PUBLIC_URL']}/all_maki_icons/png/${iconName}.png`\n        return new Promise((resolve, reject) => {\n            if (map.hasImage(iconName)) return resolve()\n            else {\n                map.loadImage(url, (err, image) => {\n                    if (err) {\n                        log.error(err)\n                        return reject(err)\n                    }\n                    map.addImage(iconName, image)\n                    return resolve()\n                })\n            }\n        })\n    }, [])\n\n    const handeMapLoad = useCallback(\n        (map) => {\n            if (!map) return\n            const icons = ['attraction-15', 'attraction-11', 'circle-15', 'circle-11']\n            icons.forEach((icKey) => loadIcon(map, icKey))\n        },\n        [loadIcon]\n    )\n\n    useEffect(() => {\n        if (mapBoxRef.current) {\n            handeMapLoad(mapBoxRef.current)\n        }\n    }, [finalStyle, handeMapLoad])\n\n    const onViewportChange = ({ viewport: { latitude, longitude, zoom }, size, projection, map }): void => {\n        if (!mapBoxRef.current) {\n            mapBoxRef.current = map\n            handeMapLoad(map)\n        }\n        curZoomRef.current = zoom\n        log.debug('zoom', latitude, longitude, zoom)\n    }\n\n    if (loading || !tileCapabilities || !mapSettings) return <div>loading...</div>\n\n    const saveMapState = (): void => {\n        if (!mapBoxRef.current) return\n        const map: any = mapBoxRef.current\n        // set the viewport in the state before changing anything\n        // else so our map doesn't jump\n        setMapSettings({\n            ...mapSettings,\n            zoom: map.getZoom(),\n            latitude: map.getCenter().lat,\n            longitude: map.getCenter().lng\n        })\n    }\n    // log.debug('MAPSETTINGS', mapSettings)\n    return (\n        <div className={classes.mapContainer}>\n            <BaseMap\n                lockToBounds\n                mapBoxToken={mapConfig.mapBoxToken}\n                // Logan, UT:\n                reactMapGLProps={{\n                    // clickRadius={2}\n                    // onClick={onClick}\n                    interactiveLayerIds: ['observations-dots'],\n                    onClick: (data): void => {\n                        if (data.features && data.features.length > 0) {\n                            saveMapState()\n                            setPopup(data)\n                        }\n                    },\n                    maxZoom: mapSettings.maxZoom,\n                    minZoom: mapSettings.minZoom\n                }}\n                bounds={mapSettings.bounds}\n                viewport={{\n                    zoom: mapSettings.zoom,\n                    latitude: mapSettings.latitude,\n                    longitude: mapSettings.longitude\n                }}\n                onViewportChange={onViewportChange}\n                mapStyles={[{ style: finalStyle }]}\n            >\n                {popup && (\n                    <MapPopup\n                        longitude={popup.lngLat[0]}\n                        latitude={popup.lngLat[1]}\n                        feature={popup.features[0]}\n                        onClose={(): void => {\n                            saveMapState()\n                            setPopup(null)\n                        }}\n                    />\n                )}\n                <StyleButtons\n                    currStyle={baseLayer}\n                    mapStyles={DefaultMapStyles}\n                    setCurrStyle={(idx?: number): void => {\n                        saveMapState()\n                        setBaseLayer(idx || 0)\n                    }}\n                />\n            </BaseMap>\n        </div>\n    )\n}\n\nexport default VBET\n","import { Theme, StyleRules } from '@material-ui/core'\n\nexport default (theme: Theme): StyleRules => ({\n    root: {\n        height: '100%'\n    },\n    mapContainer: {\n        height: '100%'\n    },\n    mapMenuContainer: {\n        left: theme.spacing(3),\n        top: theme.spacing(3)\n    },\n    formControl: {\n        marginTop: theme.spacing(2)\n    }\n})\n","import log from 'loglevel'\n\nexport default (mapSettings: any, baseLayer: number): any => {\n    log.info('BeaverObservation Map Style', mapSettings)\n    const dark: boolean = baseLayer === 2\n    const sources = {\n        observations: {\n            tiles: mapSettings.tiles,\n            type: 'vector',\n            minzoom: mapSettings.minzoom,\n            maxzoom: mapSettings.maxzoom,\n            bounds: mapSettings.bounds\n        }\n    }\n    const layers = [\n        {\n            id: 'observations-dots',\n            type: 'symbol',\n            source: 'observations',\n            'source-layer': 'observations',\n            minzoom: mapSettings.minzoom,\n            layout: {\n                'icon-image': ['step', ['zoom'], 'circle-11', 10, 'attraction-11', 13, 'attraction-15'],\n                'icon-allow-overlap': true,\n                'icon-ignore-placement': true,\n                'text-size': ['step', ['zoom'], 9, 11, 11],\n                'text-offset': ['step', ['zoom'], ['literal', [0, 0.3]], 7, ['literal', [0, 0.7]]],\n                'text-anchor': ['step', ['zoom'], 'center', 5, 'top'],\n                'text-field': ['step', ['zoom'], '', 15, ['get', 'obs_type']]\n            },\n            paint: {\n                // 'icon-opacity': ['step', ['zoom'], 0, 5, 1],\n                'text-halo-color': dark ? '#000000' : '#FFFFFF',\n                'text-halo-width': 0.1,\n                'text-halo-blur': 0.2,\n                'text-color': dark ? '#FFFFFF' : '#000000'\n                // 'text-opacity': ['step', ['zoom'], 0.5, 7, 1]\n            }\n        }\n    ]\n    return {\n        version: 8,\n        name: 'Outdoors',\n        metadata: {\n            // 'mapbox:type': 'default',\n            // 'mapbox:origin': 'outdoors-v11',\n            // 'mapbox:autocomposite': true,\n            // 'mapbox:groups': {},\n            // 'mapbox:sdk-support': { js: '0.50.0', android: '6.7.0', ios: '4.6.0' }\n        },\n        // 'center': [ -114.19115411710368, 43.32991248939766 ],\n        // 'zoom': 9.061958904803715,\n        // 'bearing': 0,\n        // 'pitch': 0,\n        sources: { ...sources },\n        sprite: 'mapbox://sprites/raychaser/cjngl84yw1js52rqgjswrnjq1',\n        glyphs: 'mapbox://fonts/raychaser/{fontstack}/{range}.pbf',\n        layers: [...layers],\n        created: '2019-05-08T21:16:06.811Z',\n        id: 'cjvfq2uwm0vqk1foby0dtwdmk',\n        modified: '2019-05-08T22:02:34.939Z',\n        visibility: 'private',\n        draft: false\n    }\n}\n","const vbetStyle = (mapSettings, menuVals, showHillshade): any => {\n    const vbetSources = mapSettings.tiles.reduce(\n        (acc, vbs) => ({\n            ...acc,\n            [vbs.sourceName]: {\n                tiles: [vbs.url],\n                type: 'vector',\n                minzoom: vbs.minZoom,\n                maxzoom: vbs.maxZoom,\n                bounds: vbs.bounds\n            }\n        }),\n        {}\n    )\n\n    // const vbetLayers = []\n    const vbetLayers = Object.keys(menuVals).reduce((accLayers: any[], mvk: string) => {\n        const newStyles = [\n            {\n                id: `VBET_${menuVals[mvk].name}_fill`,\n                type: 'fill',\n                source: menuVals[mvk].sourceName,\n                'source-layer': menuVals[mvk].json.vector_layers[0].id,\n                minzoom: mapSettings.minZoom - 1,\n                maxzoom: mapSettings.maxZoom + 1,\n                layout: {},\n                paint: {\n                    'fill-opacity': [\n                        'interpolate',\n                        ['linear'],\n                        ['zoom'],\n                        mapSettings.minZoom,\n                        0.7,\n                        mapSettings.maxZoom,\n                        0.2\n                    ],\n                    'fill-color': menuVals[mvk].fillColor\n                }\n            },\n            {\n                id: `VBET_${menuVals[mvk].name}_lines`,\n                type: 'line',\n                source: menuVals[mvk].sourceName,\n                'source-layer': menuVals[mvk].json.vector_layers[0].id,\n                layout: {},\n                minzoom: mapSettings.minZoom - 1,\n                maxzoom: mapSettings.maxZoom + 1,\n                paint: {\n                    'line-color': menuVals[mvk].lineColor,\n                    'line-opacity': 1.0,\n                    'line-width': ['interpolate', ['linear'], ['zoom'], mapSettings.minZoom, 1, mapSettings.maxZoom, 2]\n                }\n            }\n        ]\n        return [...accLayers, ...newStyles]\n    }, [])\n\n    const sources = {\n        ...vbetSources,\n        hillshade: {\n            type: 'raster',\n            tiles: [`${process.env.REACT_APP_RS_TILES_CDN}/${mapSettings.rasterTiles.Hillshade}/{z}/{x}/{y}.png`],\n            // bounds: [ -113.01440783404563, 45.93865076842336, -120.81442065207882, 48.168107678462874 ],\n            scheme: 'tms',\n            minzoom: 5,\n            maxzoom: 12,\n            tileSize: 256\n        },\n        contextSource: {\n            tiles: [`${process.env.REACT_APP_BRAT_CDN}/crb/context/{z}/{x}/{y}.pbf`],\n            type: 'vector',\n            minzoom: 6,\n            maxzoom: 12,\n            bounds: [-124.091448, 41.127826, -109.762491, 48.997885]\n        }\n    }\n    const layers = [\n        {\n            id: 'Hillshade',\n            type: 'raster',\n            source: 'hillshade',\n            // 'source-layer': 'hillshade',\n            // 'interactive': false\n            layout: {\n                visibility: showHillshade ? 'visible' : 'none'\n            },\n            paint: {}\n        },\n        // {\n        //   'id': 'HUC8Fill',\n        //   'type': 'fill',\n        //   'source': 'contextSource',\n        //   'source-layer': 'huc8',\n        //   'minzoom': 5,\n        //   'maxzoom': 10.2,\n        //   'layout': {},\n        //   'paint': {\n        //     'fill-opacity': [\n        //       'interpolate',\n        //       ['linear'],\n        //       ['zoom'],\n        //       6, 0.3,\n        //       11, 0\n        //     ],\n        //     'fill-color': '#FF0000'\n        //   }\n        // },\n        ...vbetLayers,\n        {\n            id: 'HUC8LInes',\n            type: 'line',\n            source: 'contextSource',\n            'source-layer': 'huc8',\n            layout: {},\n            minzoom: 5,\n            maxzoom: 19,\n            paint: {\n                'line-color': '#FF0000',\n                'line-opacity': 0.5,\n                'line-width': ['interpolate', ['linear'], ['zoom'], 8, 1, 14, 4]\n            }\n        },\n        {\n            id: 'HUC8_Labels',\n            type: 'symbol',\n            source: 'contextSource',\n            'source-layer': 'huc8',\n            minzoom: 5,\n            maxzoom: 19,\n            layout: {\n                'text-size': ['interpolate', ['linear'], ['zoom'], 8, 10, 14, 30],\n                'text-field': ['to-string', ['concat', ['get', 'HUC8'], '\\n', ['get', 'NAME']]]\n            },\n            paint: {\n                'text-color': '#000000',\n                'text-halo-width': 2,\n                'text-halo-blur': 4,\n                'text-halo-color': '#FFFFFF'\n            }\n        }\n    ]\n    return {\n        version: 8,\n        name: 'Outdoors',\n        metadata: {\n            'mapbox:type': 'default',\n            'mapbox:origin': 'outdoors-v11',\n            'mapbox:autocomposite': true,\n            'mapbox:groups': {},\n            'mapbox:sdk-support': { js: '0.50.0', android: '6.7.0', ios: '4.6.0' }\n        },\n        // 'center': [ -114.19115411710368, 43.32991248939766 ],\n        // 'zoom': 9.061958904803715,\n        // 'bearing': 0,\n        // 'pitch': 0,\n        sources: { ...sources },\n        sprite: 'mapbox://sprites/pipbailey/cjvfq2uwm0vqk1foby0dtwdmk/ayuihl2d38ufkjhmu0pwx0cto',\n        glyphs: 'mapbox://fonts/pipbailey/{fontstack}/{range}.pbf',\n        layers: [...layers],\n        created: '2019-05-08T21:16:06.811Z',\n        id: 'cjvfq2uwm0vqk1foby0dtwdmk',\n        modified: '2019-05-08T22:02:34.939Z',\n        owner: 'pipbailey',\n        visibility: 'private',\n        draft: false\n    }\n}\n\nexport default {\n    vbetStyle\n}\n","import React, { useState, useMemo, useRef, useEffect } from 'react'\n\nimport FormControl from '@material-ui/core/FormControl'\nimport FormLabel from '@material-ui/core/FormLabel'\nimport FormGroup from '@material-ui/core/FormGroup'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport Checkbox from '@material-ui/core/Checkbox'\nimport Typography from '@material-ui/core/Typography'\n\nimport { MapPaper, Legend, BaseMap, StyleButtons, MapStyles as DefaultMapStyles } from '@northarrowresearch/react-maps'\n\nimport { makeStyles } from '@material-ui/core/styles'\n\nimport { combineStyles } from '../../../lib/stylebuild'\nimport { MapType } from '../../../types'\nimport { mapConfig } from '../../../config'\nimport style from './VBET.style'\nimport mapStyles from './VBET.mapStyle'\nimport log from 'loglevel'\n\nconst useStyles = makeStyles(style)\n\nexport interface Props {\n    state: MapType\n}\n/**\n * This is the over-arching wrapper for the app. It combines all the\n * necessary pieces\n */\nconst VBET: React.FC<Props> = ({ state }: Props) => {\n    const classes = useStyles()\n    const [loading, setLoading] = useState<boolean>(true)\n    const [showHillshade, setHillshade] = useState<boolean>(true)\n    const [mapSettings, setMapSettings] = useState<any>()\n    const [menuVals, setMenuVals] = useState({})\n    const [baseLayer, setBaseLayer] = useState<number>(1)\n    const mapBoxRef = useRef()\n    const curZoomRef = useRef()\n\n    const handleChange = (mtObj): void => {\n        const newVals = { ...menuVals }\n\n        if (menuVals[mtObj.name]) {\n            delete newVals[mtObj.name]\n        } else {\n            newVals[mtObj.name] = mtObj\n        }\n        if (mapBoxRef.current) {\n            const map: any = mapBoxRef.current\n            setMapSettings({\n                ...mapSettings,\n                zoom: map.getZoom(),\n                latitude: map.getCenter().lat,\n                longitude: map.getCenter().lng\n            })\n        }\n        setMenuVals(newVals)\n    }\n\n    useEffect(() => {\n        if (!loading) return\n        const urlPromises = Object.keys(state.tiles).map((k) => {\n            const tileset = state.tiles[k] as string[]\n            const url = `${process.env.REACT_APP_RS_TILES_CDN}/${tileset[0]}/metadata.json`\n            return fetch(url)\n                .then((res) => res.json())\n                .then((d) => ({\n                    ...d,\n                    name: k,\n                    menuName: `VBET ${k}%`,\n                    lineColor: tileset[1],\n                    fillColor: tileset[2],\n                    sourceName: `vbet_${k}`,\n                    url: `${process.env.REACT_APP_RS_TILES_CDN}/${tileset[0]}/{z}/{x}/{y}.pbf`,\n                    json: JSON.parse(d.json),\n                    minZoom: parseInt(d.minzoom, 10),\n                    maxZoom: parseInt(d.maxzoom, 10),\n                    bounds: JSON.parse(`[${d.bounds}]`),\n                    center: JSON.parse(`[${d.center}]`)\n                }))\n                .catch((err) => {\n                    log.error('DATA::fetch_tile::err:', err) // Print the error if one occurred\n                })\n        })\n        Promise.all(urlPromises)\n            .then((darr) => {\n                const bounds = [\n                    Math.min(...darr.map((d) => d.bounds[0])),\n                    Math.min(...darr.map((d) => d.bounds[1])),\n                    Math.max(...darr.map((d) => d.bounds[2])),\n                    Math.max(...darr.map((d) => d.bounds[3]))\n                ]\n                setMapSettings({\n                    bounds,\n                    maxZoom: Math.max(13, ...darr.map((d) => d.maxZoom)),\n                    minZoom: Math.min(5, ...darr.map((d) => d.minZoom)),\n                    zoom: Math.min(...darr.map((d) => d.minZoom)),\n                    longitude: (bounds[0] + bounds[2]) / 2,\n                    latitude: (bounds[1] + bounds[3]) / 2,\n                    rasterTiles: state.rasterTiles,\n                    tiles: darr\n                })\n                // activate the first layer we have\n                setMenuVals({\n                    [darr[0].name]: darr[0]\n                })\n                setLoading(false)\n            })\n            .catch((err) => {\n                setLoading(false)\n            })\n    }, [state.rasterTiles, state.tiles, loading])\n\n    const finalStyle = useMemo(() => {\n        if (!mapSettings) return null\n        const bs = mapStyles.vbetStyle(mapSettings, menuVals, showHillshade)\n        return combineStyles(DefaultMapStyles[baseLayer].style, bs)\n    }, [baseLayer, menuVals, showHillshade, mapSettings])\n\n    const onViewportChange = ({ viewport: { latitude, longitude, zoom }, size, projection, map }): void => {\n        if (!mapBoxRef.current) mapBoxRef.current = map\n        curZoomRef.current = zoom\n        log.debug('zoom', latitude, longitude, zoom)\n    }\n\n    if (loading || !mapSettings) return <div>loading...</div>\n\n    return (\n        <div className={classes.mapContainer}>\n            <BaseMap\n                lockToBounds\n                mapBoxToken={mapConfig.mapBoxToken}\n                // Logan, UT:\n                reactMapGLProps={{\n                    // clickRadius={2}\n                    // onClick={onClick}\n                    maxZoom: mapSettings.maxZoom,\n                    minZoom: mapSettings.minZoom\n                }}\n                bounds={mapSettings.bounds}\n                viewport={{\n                    zoom: mapSettings.zoom || 12,\n                    latitude: mapSettings.latitude,\n                    longitude: mapSettings.longitude\n                }}\n                onViewportChange={onViewportChange}\n                mapStyles={[{ style: finalStyle }]}\n            >\n                <MapPaper className={classes.mapMenuContainer}>\n                    <Typography color=\"error\">\n                        <strong>WARNING</strong>: Model result are not verified. Do not use for anything important.\n                    </Typography>\n                    <FormControl component=\"fieldset\" className={classes.formControl}>\n                        <FormLabel component=\"legend\">Thresholding</FormLabel>\n                        <FormGroup>\n                            {mapSettings.tiles.map((mtObj, idx) => (\n                                <FormControlLabel\n                                    onClick={(): void => handleChange(mtObj)}\n                                    key={`control-check-${idx}`}\n                                    control={<Checkbox checked={Boolean(menuVals[mtObj.name])} />}\n                                    label={mtObj.menuName}\n                                />\n                            ))}\n                        </FormGroup>\n                    </FormControl>\n                    <FormControl component=\"fieldset\" className={classes.formControl}>\n                        <FormGroup>\n                            <FormControlLabel\n                                onClick={(): void => setHillshade(!showHillshade)}\n                                control={<Checkbox checked={showHillshade} />}\n                                label=\"Hillshade Raster\"\n                            />\n                        </FormGroup>\n                    </FormControl>\n                    <Legend\n                        legend={Object.keys(menuVals).map((mvk) => ({\n                            label: menuVals[mvk].menuName,\n                            color: menuVals[mvk].fillColor\n                        }))}\n                    />\n                </MapPaper>\n                <StyleButtons\n                    currStyle={baseLayer}\n                    mapStyles={DefaultMapStyles}\n                    setCurrStyle={(idx?: number): void => setBaseLayer(idx || 0)}\n                />\n            </BaseMap>\n        </div>\n    )\n}\n\nexport default VBET\n","import { Theme, StyleRules } from '@material-ui/core'\n\nexport default (theme: Theme): StyleRules => ({\n    root: {\n        height: '100%'\n    },\n    mapContainer: {\n        height: '100%'\n    },\n    mapMenuContainer: {\n        left: theme.spacing(3),\n        top: theme.spacing(3)\n    },\n    formControl: {\n        marginTop: theme.spacing(2)\n    }\n})\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Avatar from '@material-ui/core/Avatar'\nimport Container from '@material-ui/core/Container'\nimport Typography from '@material-ui/core/Typography'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar'\n// import MenuIcon from '@material-ui/icons/Menu'\nimport { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles((theme) => ({\n    container: {\n        height: '100%',\n        display: 'flex',\n        flexDirection: 'column'\n    },\n    spacer: {\n        flexGrow: 1\n    },\n    root: {\n        padding: theme.spacing(2),\n        margin: theme.spacing(2)\n    },\n    logo: {},\n    logoContainer: {\n        padding: theme.spacing(2),\n        textAlign: 'center'\n    }\n}))\n\nexport interface Props {\n    maps: any[]\n    changeMaps: (bs: any) => void\n}\n\nconst StateChooser: React.FC<Props> = ({ maps, changeMaps }: Props) => {\n    const classes = useStyles()\n\n    return (\n        <Container maxWidth=\"sm\" className={classes.container}>\n            <div className={classes.spacer} />\n            <Paper className={classes.root} elevation={1}>\n                <div className={classes.logoContainer}>\n                    <img className={classes.logo} src={process.env.PUBLIC_URL + '/RiverscapesLogo.png'} alt=\"logo\" />\n                </div>\n                <Typography variant=\"h5\">Choose a map:</Typography>\n                <List>\n                    {maps &&\n                        maps.map((p, idx) => (\n                            <ListItem key={`progKey-${idx}`} button divider onClick={(): void => changeMaps(p.url)}>\n                                <ListItemAvatar>\n                                    <Avatar alt=\"programname\">{p.title.substr(0, 1)}</Avatar>\n                                </ListItemAvatar>\n                                <ListItemText primary={p.title} />\n                            </ListItem>\n                        ))}\n                </List>\n            </Paper>\n            <div className={classes.spacer} />\n        </Container>\n    )\n}\n\nexport default StateChooser\n","const baseBratLayer = {\n    id: 'bratLines',\n    type: 'line',\n    source: 'bratSource',\n    'source-layer': 'brat',\n    minzoom: 5,\n    maxzoom: 19,\n    layout: { visibility: 'visible' },\n    paint: {\n        'line-opacity': ['interpolate', ['linear'], ['zoom'], 8, 0, 10, 1],\n        'line-width': ['interpolate', ['linear'], ['zoom'], 8, 0.5, 14, 4]\n    }\n}\n\n// legend?: { color: string; label: string }[]\n// Areas Beavers Can Build Dams but Could be Undesirable oPBRC_UI\nconst oPBRCUI = {\n    key: 'oPBRC_UI',\n    label: 'Areas Beavers Can Build Dams but Could be Undesirable',\n    jsonFieldName: 'Risks',\n    unit: 'Km',\n    lookup: true,\n    legend: [\n        { label: 'Negligible Risk', color: '#c5c5c5', value: 1 },\n        { label: 'Some Risk', color: '#fba12c', value: 2 },\n        { label: 'Minor Risk', color: '#26bcf8', value: 3 },\n        { label: 'Considerable Risk', color: '#e01f18', value: 4 }\n    ],\n    layer: {\n        ...baseBratLayer,\n        paint: {\n            ...baseBratLayer.paint,\n            'line-color': ['step', ['get', 'oPBRC_UI'], '#c5c5c5', 2, '#fba12c', 3, '#26bcf8', 4, '#e01f18']\n        }\n    }\n}\n\n// Possible BEaver Dam Conservation/Restoration Opportunities oPBR_CR\nconst oPBRCR = {\n    key: 'oPBRC_CR',\n    label: 'Possible Beaver Dam Conservation/Restoration Opportunities',\n    jsonFieldName: 'Opportunities',\n    unit: 'Km',\n    lookup: true,\n    legend: [\n        { label: 'Easiest - Low-Hanging Fruit', color: '#b6cb82', value: 1 },\n        { label: 'Straight Forward - Quick Return', color: '#2d85bc', value: 2 },\n        { label: 'Strategic - Long-Term Investment', color: '#2cfbc2', value: 3 },\n        { label: 'NA', color: '#c5c5c6', value: 4 }\n    ],\n    layer: {\n        ...baseBratLayer,\n        paint: {\n            ...baseBratLayer.paint,\n            'line-color': ['step', ['get', 'oPBRC_CR'], '#b6cb82', 2, '#2d85bc', 3, '#2cfbc2', 4, '#c5c5c6']\n        }\n    }\n}\n\n// Existing Dam Build Capacity occ_EX\n// id, name, max_capacity\n// 1, None, 0\n// 2, Rare, 1\n// 3, Occasional, 5\n// 4, Frequent, 15\n// 5, Pervasive, 40\nconst occEX = {\n    key: 'oCC_EX',\n    label: 'Existing Dam Build Capacity',\n    lookup: false,\n    jsonFieldName: 'Existing',\n    unit: 'Km',\n    legend: [\n        { label: 'None: 0 dams/km', color: '#e52028', order: 1, thresh: 0 },\n        { label: 'Rare: 0-1 dams/km', color: '#f69f32', order: 2, thresh: 1 },\n        { label: 'Occasional: 1-5 dams/km', color: '#ece642', order: 3, thresh: 5 },\n        { label: 'Frequent: 5-15 dams/km', color: '#62b448', order: 4, thresh: 15 },\n        { label: 'Pervasive: 15-40 dams/km', color: '#3757a0', order: 5, thresh: 100 }\n    ],\n    layer: {\n        ...baseBratLayer,\n        paint: {\n            ...baseBratLayer.paint,\n            'line-color': [\n                'step',\n                ['get', 'oCC_EX'],\n                '#e52028',\n                0.000001,\n                '#f69f32',\n                1,\n                '#ece642',\n                5,\n                '#62b448',\n                15,\n                '#3757a0'\n            ]\n        }\n    }\n}\n\n// Historic Dam Build Capacity oCC_HPE\nconst oCCHPE = {\n    key: 'oCC_HPE',\n    label: 'Historic Dam Build Capacity',\n    jsonFieldName: 'Historic',\n    unit: 'Km',\n    lookup: false,\n    legend: [\n        { label: 'None: 0 dams/km', color: '#e52028', order: 1, thresh: 0 },\n        { label: 'Rare: 0-1 dams/km', color: '#f69f32', order: 2, thresh: 1 },\n        { label: 'Occasional: 1-5 dams/km', color: '#ece642', order: 3, thresh: 5 },\n        { label: 'Frequent: 5-15 dams/km', color: '#62b448', order: 4, thresh: 15 },\n        { label: 'Pervasive: 15-40 dams/km', color: '#3757a0', order: 5, thresh: 100 }\n    ],\n    layer: {\n        ...baseBratLayer,\n        paint: {\n            ...baseBratLayer.paint,\n            'line-color': [\n                'step',\n                ['get', 'oCC_HPE'],\n                '#e52028',\n                0.000001,\n                '#f69f32',\n                1,\n                '#ece642',\n                5,\n                '#62b448',\n                15,\n                '#3757a0'\n            ]\n        }\n    }\n}\n\nexport const radioOptionsArr: any = [occEX, oCCHPE, oPBRCUI, oPBRCR]\n\nexport const getRadioLayer = (layerKey) => {\n    const bratLayer = radioOptionsArr.find((bl) => bl.key === layerKey).layer\n    // const bratLayerHighlighted = { ...bratLayer }\n    bratLayer.interactive = true\n    // bratLayerHighlighted.id = bratLayerHighlighted.id + '_highlight'\n    // bratLayerHighlighted.filter = ['in', 'ReachID', '']\n    // bratLayerHighlighted['line-width'] = 14\n\n    bratLayer.interactive = true\n    return [bratLayer]\n}\n\nexport const getBratStyle = (layerKey, mapLayers, censusSource): any => {\n    const radioLayers = getRadioLayer(layerKey)\n    const bratSource = mapLayers.brat\n    const contextSource = mapLayers.context\n\n    const sources = {\n        bratSource: {\n            tiles: [`${bratSource.url}/{z}/{x}/{y}.pbf`],\n            type: 'vector',\n            minzoom: parseInt(bratSource.minzoom, 10),\n            maxzoom: parseInt(bratSource.maxzoom, 10),\n            bounds: JSON.parse(`[${bratSource.bounds}]`)\n        },\n        contextSource: {\n            tiles: [`${contextSource.url}/{z}/{x}/{y}.pbf`],\n            type: 'vector',\n            minzoom: parseInt(contextSource.minzoom, 10),\n            maxzoom: parseInt(contextSource.maxzoom, 10),\n            bounds: JSON.parse(`[${contextSource.bounds}]`)\n        },\n        damCensus: {\n            type: 'geojson',\n            data: `${process.env.REACT_APP_CDN}/${censusSource}`\n        }\n    }\n    const layers = [\n        {\n            id: 'HUC8Fill',\n            type: 'fill',\n            source: 'contextSource',\n            'source-layer': 'huc8',\n            minzoom: 5,\n            maxzoom: 10.2,\n            layout: {},\n            paint: {\n                'fill-opacity': ['interpolate', ['linear'], ['zoom'], 6, 0.5, 10, 0],\n                'fill-color': 'hsl(0, 0%, 59%)'\n            },\n            interactive: true\n        },\n        {\n            id: 'HUC8Fill_Highlighted',\n            type: 'fill',\n            source: 'contextSource',\n            'source-layer': 'huc8',\n            minzoom: 5,\n            maxzoom: 19,\n            layout: {},\n            paint: {\n                'fill-opacity': ['interpolate', ['linear'], ['zoom'], 6, 0.5, 10, 0.05],\n                'fill-color': '#ee00ff'\n            },\n            filter: ['in', 'HUC8', '']\n        },\n        {\n            id: 'HUC8LInes',\n            type: 'line',\n            source: 'contextSource',\n            'source-layer': 'huc8',\n            layout: {},\n            minzoom: 5,\n            maxzoom: 19,\n            paint: {\n                'line-color': 'hsl(0, 0%, 100%)',\n                'line-opacity': 0.5,\n                'line-width': ['interpolate', ['linear'], ['zoom'], 8, 1, 14, 4]\n            }\n        },\n        {\n            id: 'HUC8LInes_HighLighted',\n            type: 'line',\n            source: 'contextSource',\n            'source-layer': 'huc8',\n            layout: {},\n            minzoom: 5,\n            maxzoom: 19,\n            paint: {\n                'line-width': ['interpolate', ['linear'], ['zoom'], 8, 1, 14, 5],\n                'line-color': '#ee00ff',\n                'line-opacity': 1\n            },\n            filter: ['in', 'HUC8', '']\n        },\n        ...radioLayers,\n        {\n            id: 'HUC8_Labels',\n            type: 'symbol',\n            source: 'contextSource',\n            'source-layer': 'huc8',\n            minzoom: 5,\n            maxzoom: 19,\n            layout: {\n                'text-size': ['interpolate', ['linear'], ['zoom'], 8, 10, 14, 30],\n                'text-field': ['to-string', ['get', 'NAME']]\n            },\n            paint: {\n                'text-color': '#FFFFFF',\n                'text-halo-width': 2,\n                'text-halo-blur': 4,\n                'text-halo-color': 'hsl(0, 100%, 0%)'\n            }\n        },\n        {\n            id: 'Census',\n            type: 'circle',\n            source: 'damCensus',\n            minzoom: 10,\n            maxzoom: 19,\n            paint: {\n                'circle-radius': 5,\n                'circle-color': '#DDDDDD',\n                'circle-stroke-width': 1,\n                'circle-stroke-color': 'black'\n            },\n            interactive: true\n        },\n        {\n            id: 'STATE',\n            type: 'line',\n            metadata: {},\n            source: 'contextSource',\n            'source-layer': 'state',\n            layout: {},\n            minzoom: 5,\n            maxzoom: 19,\n            paint: {\n                'line-color': 'hsl(0, 100%, 34%)',\n                'line-width': 4\n            }\n        }\n    ]\n\n    return {\n        version: 8,\n        name: 'Outdoors',\n        metadata: {\n            'mapbox:type': 'default',\n            'mapbox:origin': 'outdoors-v11',\n            'mapbox:autocomposite': true,\n            'mapbox:groups': {},\n            'mapbox:sdk-support': { js: '0.50.0', android: '6.7.0', ios: '4.6.0' }\n        },\n        // 'center': [ -114.19115411710368, 43.32991248939766 ],\n        // 'zoom': 9.061958904803715,\n        // 'bearing': 0,\n        // 'pitch': 0,\n        sources: { ...sources },\n        sprite: 'mapbox://sprites/pipbailey/cjvfq2uwm0vqk1foby0dtwdmk/ayuihl2d38ufkjhmu0pwx0cto',\n        glyphs: 'mapbox://fonts/pipbailey/{fontstack}/{range}.pbf',\n        layers: [...layers],\n        created: '2019-05-08T21:16:06.811Z',\n        id: 'cjvfq2uwm0vqk1foby0dtwdmk',\n        modified: '2019-05-08T22:02:34.939Z',\n        owner: 'pipbailey',\n        visibility: 'private',\n        draft: false\n    }\n}\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { radioOptionsArr } from './BRAT.mapstyle'\nimport log from 'loglevel'\nimport {\n    XYPlot,\n    XAxis,\n    YAxis,\n    VerticalGridLines,\n    // DiscreteColorLegend,\n    // HorizontalGridLines,\n    HorizontalBarSeries\n    // LabelSeries\n} from 'react-vis'\n\nconst useStyles = makeStyles((theme) => ({\n    root: {},\n    title: {\n        padding: theme.spacing(1)\n    }\n}))\n\ninterface Props {\n    currHuc8: any\n    data: any\n    radioVal: any\n}\n\nconst Chart: React.FC<Props> = ({ currHuc8, data, radioVal }: Props) => {\n    const classes = useStyles()\n    if (!data) return <div>Loading...</div>\n    if (Object.keys(data).length === 0) return null\n\n    const bratLayer = radioOptionsArr.find((bl) => bl.key === radioVal)\n\n    let chartDataValues = {}\n    try {\n        chartDataValues = data[currHuc8.HUC8][bratLayer.jsonFieldName]\n    } catch {}\n\n    const chartData = bratLayer.legend\n        .map((leg) => ({\n            title: leg.label,\n            value: chartDataValues[leg.value] ? chartDataValues[leg.value] : null,\n            color: leg.color\n        }))\n        .reverse()\n\n    log.debug('CHART DEBUG', { currHuc8, data, radioVal, chartData })\n\n    return (\n        <Paper className={classes.root} elevation={1}>\n            <div className={classes.title}>\n                <Typography variant=\"h5\">{currHuc8.NAME}</Typography>\n                <Typography variant=\"caption\">{currHuc8.HUC8}</Typography>\n                {/* <Typography variant='caption' component='div' color='error'><em>NOTE: CHART VALUES ARE RANDOM FOR NOW</em></Typography> */}\n            </div>\n            <XYPlot\n                yType=\"ordinal\"\n                margin={{ left: 10 }}\n                width={350}\n                height={150}\n                colorType=\"category\"\n                colorDomain={chartData.map((dt, idx) => idx)}\n                colorRange={chartData.map((dt) => dt.color)}\n            >\n                <VerticalGridLines />\n                <XAxis title={bratLayer.unit} />\n                <YAxis hideTicks />\n                <HorizontalBarSeries\n                    className=\"vertical-bar-data\"\n                    data={chartData.map(({ title, value, color }, idx) => ({ x: value, y: title, color: idx }))}\n                    // data={myData}\n                />\n            </XYPlot>\n        </Paper>\n    )\n}\n\nexport default Chart\n","import React from 'react'\nimport RadioGroup from '@material-ui/core/RadioGroup'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport Radio from '@material-ui/core/Radio'\nimport { Theme, StyleRules } from '@material-ui/core'\n\n// import MenuIcon from '@material-ui/core/Menu'\nimport { withStyles } from '@material-ui/core/styles'\n\nconst style = (theme: Theme): StyleRules => ({\n    root: {\n        padding: theme.spacing(2)\n    },\n    optLabel: {\n        marginTop: theme.spacing(1),\n        marginBottom: theme.spacing(1)\n    }\n})\n\nexport interface Props {\n    classes: any\n    radioVal: string\n    setRadioIdx: (val: any) => void\n    allVals: any[]\n}\n\nconst MapMenu: React.FC<Props> = ({ classes, radioVal, setRadioIdx, allVals }: Props) => {\n    return (\n        <div className={classes.root}>\n            <RadioGroup className={classes.group} value={radioVal} onChange={(e, value): void => setRadioIdx(value)}>\n                {allVals.map((rval, idx) => (\n                    <FormControlLabel\n                        classes={{\n                            label: classes.optLabel\n                        }}\n                        key={`formcontrol${idx}`}\n                        value={rval.key}\n                        control={<Radio />}\n                        label={rval.label}\n                    />\n                ))}\n            </RadioGroup>\n        </div>\n    )\n}\n\nexport default withStyles(style)(MapMenu)\n","import React, { useState, useMemo, useRef, useEffect } from 'react'\nimport { Popup, Marker } from 'react-map-gl'\n\nimport Typography from '@material-ui/core/Typography'\n\nimport Divider from '@material-ui/core/Divider'\nimport Paper from '@material-ui/core/Paper'\nimport { mapConfig } from '../../../config'\n\n// import MapMenu from './components/MapMenu'\nimport Chart from './Chart'\nimport numeral from 'numeral'\nimport MapMenu from './MapMenu'\nimport { Legend, BaseMap, StyleButtons, MapStyles as DefaultMapStyles } from '@northarrowresearch/react-maps'\nimport { combineStyles } from '../../../lib/stylebuild'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { getBratStyle, radioOptionsArr, getRadioLayer } from './BRAT.mapstyle'\nimport log from 'loglevel'\nimport style from './BRAT.style'\n\n// Here's our global overrides css\n// import './App.css'\n\nconst useStyles = makeStyles(style)\n\nexport interface Props {\n    state: any\n}\n/**\n * This is the over-arching wrapper for the app. It combines all the\n * necessary pieces\n */\nconst BRAT: React.FC<Props> = ({ state }: Props) => {\n    const classes = useStyles()\n    const [chartData, setChartData] = useState<any>()\n    const [mapSettings, setMapSettings] = useState<any>()\n\n    const [radioVal, setRadioVal] = useState(radioOptionsArr[0].key)\n    const [mapLayers, setMapLayers] = useState<any>()\n    const [baseLayer, setBaseLayer] = useState(2)\n    const mapBoxRef = useRef()\n    const curZoomRef = useRef<number>()\n\n    const [popup, setPopup] = useState<any>(null)\n    const [marker, setMarker] = useState<any>(null)\n\n    const [currHuc8, setCurrHuc8] = useState<any>(null)\n\n    const onRadioChange = (val): void => {\n        setRadioVal(val)\n        if (mapBoxRef.current) {\n            const map: any = mapBoxRef.current\n            const radioLayers = getRadioLayer(val).reverse()\n            radioLayers.forEach((rl) => {\n                if (map.getLayer(rl.id)) map.removeLayer(rl.id)\n                map.addLayer(rl, 'HUC8_Labels')\n            })\n        }\n    }\n\n    const currLayer = radioOptionsArr.find((bl) => bl.key === radioVal)\n\n    useEffect(() => {\n        const url = `${process.env.REACT_APP_BRAT_CDN}/${state.layers.huc8summary}`\n        fetch(url)\n            .then((res) => res.json())\n            .then(setChartData)\n            .catch((err) => {\n                setChartData({})\n                log.error('DATA::brat_summary::err:', err) // Print the error if one occurred\n            })\n        const bratUrl = `${process.env.REACT_APP_BRAT_CDN}/${state.layers.bratSourceTiles}/metadata.json`\n        const contextUrl = `${process.env.REACT_APP_BRAT_CDN}/${state.layers.contextSourceTiles}/metadata.json`\n        Promise.all([fetch(bratUrl).then((res) => res.json()), fetch(contextUrl).then((res) => res.json())]).then(\n            (resultArr) => {\n                setMapSettings({\n                    bounds: state.map.bounds,\n                    maxZoom: state.map.maxZoom,\n                    minZoom: state.map.minZoom,\n                    zoom: state.map.zoom,\n                    latitude: state.map.latitude,\n                    longitude: state.map.longitude\n                })\n                setMapLayers({\n                    brat: {\n                        url: `${process.env.REACT_APP_BRAT_CDN}/${state.layers.bratSourceTiles}`,\n                        ...resultArr[0],\n                        json: JSON.parse(resultArr[0].json)\n                    },\n                    context: {\n                        url: `${process.env.REACT_APP_BRAT_CDN}/${state.layers.contextSourceTiles}`,\n                        ...resultArr[1],\n                        json: JSON.parse(resultArr[1].json)\n                    }\n                })\n            }\n        )\n    }, [state])\n\n    useEffect(() => {\n        const url = `${process.env.REACT_APP_BRAT_CDN}/${state.layers.huc8summary}`\n        fetch(url)\n            .then((res) => res.json())\n            .then(setChartData)\n            .catch((err) => {\n                setChartData({})\n                log.error('DATA::brat_summary::err:', err) // Print the error if one occurred\n            })\n\n        // Lookups are a fairly new thing\n        if (state.lookups) {\n            fetch(`${process.env.REACT_APP_BRAT_CDN}/${state.lookups}`)\n                .then((res) => res.json())\n                .then((data) => {\n                    log.debug('Got Lookups:', data)\n                })\n                .catch((err) => {\n                    setChartData({})\n                    log.error('DATA::brat_summary::err:', err) // Print the error if one occurred\n                })\n        }\n    }, [state])\n\n    const finalStyle = useMemo(() => {\n        if (!mapLayers) return\n        const bs = getBratStyle(radioVal, mapLayers, state.layers.census)\n        return combineStyles(DefaultMapStyles[baseLayer].style, bs)\n    }, [baseLayer, mapLayers, radioVal, state])\n\n    const getFeats = (e): any => {\n        if (!e || !e.features || e.features.length === 0) return\n        const bratFeatures = e.features.filter((feat) => feat.sourceLayer === 'brat')\n        const censusFeatures = e.features.filter((feat) => feat.source === 'damCensus')\n        const hucFeature = e.features.find((feat) => feat.sourceLayer === 'huc8')\n        return { bratFeatures, censusFeatures, hucFeature }\n    }\n\n    const saveMapState = (): void => {\n        if (!mapBoxRef.current) return\n        const map: any = mapBoxRef.current\n        // set the viewport in the state before changing anything\n        // else so our map doesn't jump\n        setMapSettings({\n            ...mapSettings,\n            zoom: map.getZoom(),\n            latitude: map.getCenter().lat,\n            longitude: map.getCenter().lng\n        })\n    }\n\n    const onHover = (e): void => {\n        const feats = getFeats(e)\n        if (!feats) return\n        saveMapState()\n        const { bratFeatures, hucFeature } = feats\n        if (hucFeature && (!currHuc8 || hucFeature.properties.HUC8 !== currHuc8.HUC8)) {\n            setCurrHuc8(hucFeature.properties)\n            // change the filter on the map so that the outline is highlighted\n            if (mapBoxRef.current) {\n                const map: any = mapBoxRef.current\n                map.setFilter('HUC8LInes_HighLighted', ['in', 'HUC8', hucFeature.properties.HUC8])\n                map.setFilter('HUC8Fill_Highlighted', ['in', 'HUC8', hucFeature.properties.HUC8])\n            }\n        }\n        if ((curZoomRef.current as number) > 9.5 && bratFeatures.length > 0) {\n            // log.debug('filteredFeatures', filteredFeatures, e.features)\n            const { lngLat } = e\n            log.debug('setMarker', { features: bratFeatures, lngLat })\n            setMarker({ features: bratFeatures, lngLat })\n        } else {\n            setMarker(null)\n        }\n    }\n\n    const onViewportChange = ({ viewport: { latitude, longitude, zoom }, size, projection, map }): void => {\n        if (!mapBoxRef.current) mapBoxRef.current = map\n        curZoomRef.current = zoom\n        log.debug('zoom', latitude, longitude, zoom)\n    }\n\n    if (!mapLayers || !mapSettings) return <div>loading...</div>\n\n    return (\n        <div className={classes.mapContainer}>\n            <BaseMap\n                lockToBounds\n                // Logan, UT:\n                mapBoxToken={mapConfig.mapBoxToken}\n                bounds={mapSettings.bounds}\n                reactMapGLProps={{\n                    onHover: onHover,\n                    clickRadius: 2,\n                    maxZoom: mapSettings.maxZoom,\n                    minZoom: mapSettings.minZoom\n                }}\n                // onClick={onClick}\n                viewport={{\n                    zoom: mapSettings.zoom,\n                    latitude: mapSettings.latitude,\n                    longitude: mapSettings.longitude\n                }}\n                onViewportChange={onViewportChange}\n                mapStyles={[{ style: finalStyle }]}\n            >\n                <Paper\n                    className={classes.mapMenuContainer}\n                    elevation={1}\n                    onPointerMove={(e): void => {\n                        e.preventDefault()\n                        e.stopPropagation()\n                    }}\n                    onMouseEnter={(e): void => {\n                        e.preventDefault()\n                        e.stopPropagation()\n                    }}\n                    onMouseOver={(e): void => {\n                        e.preventDefault()\n                        e.stopPropagation()\n                    }}\n                    onClick={(e): void => {\n                        e.preventDefault()\n                        e.stopPropagation()\n                    }}\n                >\n                    <MapMenu radioVal={radioVal} setRadioIdx={onRadioChange} allVals={radioOptionsArr} />\n                    {currHuc8 && <Chart currHuc8={currHuc8} data={chartData} radioVal={radioVal} />}\n                    <Legend legend={currLayer.legend} />\n                </Paper>\n                <StyleButtons\n                    currStyle={baseLayer}\n                    mapStyles={DefaultMapStyles}\n                    setCurrStyle={(idx?: number): void => {\n                        saveMapState()\n                        setBaseLayer(idx || 0)\n                    }}\n                />\n                {(curZoomRef.current as number) >= 10 && marker && (\n                    <Marker longitude={marker.lngLat[0]} latitude={marker.lngLat[1]}>\n                        <svg\n                            className={classes.svgArc}\n                            version=\"1.1\"\n                            onClick={(): void => setPopup(marker)}\n                            width={curZoomRef.current}\n                            height={curZoomRef.current}\n                            style={{ transform: `translateY(-50%) translateX(-50%)` }}\n                            viewBox=\"0, 0, 100, 100\"\n                        >\n                            <circle cx=\"50\" cy=\"50\" r=\"49\" fill=\"white\" strokeWidth=\"1\" stroke=\"black\" />\n                        </svg>\n                    </Marker>\n                )}\n                {(curZoomRef.current as number) >= 10 && popup && (\n                    <Popup\n                        longitude={popup.lngLat[0]}\n                        latitude={popup.lngLat[1]}\n                        closeButton\n                        closeOnClick\n                        onClose={(): void => {\n                            saveMapState()\n                            setPopup(null)\n                        }}\n                        anchor=\"top\"\n                    >\n                        {popup.features.map((feat, idx) => {\n                            let lookupVal: any = null\n                            const val = feat.properties[radioVal]\n                            try {\n                                if (currLayer.lookup) {\n                                    // find an exact lookup in the legend\n                                    lookupVal = currLayer.legend.find((leg) => val === leg.value)\n                                } else {\n                                    // find the corresponding bucket\n                                    lookupVal = currLayer.legend.find((leg) => val <= leg.thresh)\n                                }\n                            } catch (e) {\n                                log.error(e)\n                            }\n                            return (\n                                <React.Fragment key={`popupfeature${idx}`}>\n                                    {idx > 0 && <Divider />}\n                                    <div>\n                                        <Typography variant=\"overline\">ReachId {feat.properties.ReachID}</Typography>\n                                        {!currLayer.lookup && (\n                                            <Typography variant=\"body1\">Value: {numeral(val).format('0,0')}</Typography>\n                                        )}\n                                        {lookupVal && <Typography variant=\"body2\">{lookupVal.label}</Typography>}\n                                    </div>\n                                </React.Fragment>\n                            )\n                        })}\n                    </Popup>\n                )}\n            </BaseMap>\n        </div>\n    )\n}\n\nexport default BRAT\n","import { Theme, StyleRules } from '@material-ui/core'\n\nexport default (theme: Theme): StyleRules => ({\n    root: {\n        height: '100%'\n    },\n    mapContainer: {\n        height: '100%'\n    },\n    mapMenuContainer: {\n        position: 'absolute',\n        left: theme.spacing(3),\n        top: theme.spacing(3),\n        maxWidth: '40%',\n        width: 350\n    }\n})\n","import BeaverObservation from './BeaverObservation/BeaverObservation'\nimport VBET from './VBET/VBET'\nimport BRAT from './BRAT'\n\nexport default {\n    VBET,\n    BeaverObservation,\n    BRAT\n}\n","import React, { useEffect, useState } from 'react'\nimport StateChooser from './StateChooser'\nimport BRAT from './BRAT'\nimport { History, Location } from 'react-router-dom'\nimport { MapType } from '../../../types'\n// import log from 'loglevel'\n\nexport interface Props {\n    state: MapType\n    location: Location\n    history: History\n}\n\nconst BRATConnect: React.FC<Props> = ({ state, location, history }: Props) => {\n    const [bratStates, setBratStates] = useState<any>()\n\n    let toolUrl: string | null = null\n    let stateUrl: string | null = null\n    try {\n        toolUrl = location.pathname.split('/').filter((s) => s.length > 0)[0]\n        stateUrl = location.pathname.split('/').filter((s) => s.length > 1)[1]\n    } catch {}\n\n    useEffect(() => {\n        const url = new URL(`${process.env.PUBLIC_URL}/brat_states.json`, window.location.href)\n        fetch(url.href)\n            .then((res) => res.json())\n            .then(setBratStates)\n    }, [])\n\n    if (!bratStates) return <div>Loading...</div>\n    else if (!stateUrl) {\n        return <StateChooser maps={bratStates} changeMaps={(pName): void => history.push(`/${toolUrl}/${pName}`)} />\n    } else {\n        return <BRAT state={bratStates.find((s) => s.url === stateUrl)} />\n    }\n}\n\nexport default BRATConnect\n","import React from 'react'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport AppBar from '@material-ui/core/AppBar'\n\nimport Button from '@material-ui/core/Button'\nimport { History } from 'react-router-dom'\n\nimport { makeStyles, Theme, StyleRules } from '@material-ui/core/styles'\nimport { Typography } from '@material-ui/core'\n\nconst useStyles = makeStyles(\n    (theme: Theme): StyleRules => ({\n        root: {\n            display: 'flex',\n            alignItems: 'center',\n            width: '100%',\n            padding: theme.spacing(0, 1),\n            textShadow: '3px 3px 3px rgba(0,0,0,0.7)',\n            backgroundImage: `url(${process.env.PUBLIC_URL}/HeaderBackground.png)`,\n            backgroundRepeat: 'no-repeat',\n            backgroundPosition: '0% 50%',\n            backgroundSize: 'cover',\n            backgroundColor: '#444444'\n        },\n        spacer: { flexGrow: 1 },\n        logo: {\n            height: 40,\n            width: 40,\n            marginRight: theme.spacing(2)\n        }\n    })\n)\n\ninterface Props {\n    title: string\n    history?: History\n    signOutHandler?: () => void\n}\n\nconst TopBar: React.FC<Props> = ({ title, signOutHandler, history }: Props) => {\n    const classes = useStyles()\n\n    // const handleNavigate = (nm: Program): void => {\n    //     handleMobileMenuClose()\n    //     if (history) history.push(`/${nm.machineName}`)\n    // }\n\n    return (\n        <React.Fragment>\n            <AppBar position=\"static\">\n                <Toolbar className={classes.root} disableGutters>\n                    <a href=\"http://riverscapes.xyz/\">\n                        <img\n                            className={classes.logo}\n                            src={'https://riverscapes.xyz/assets/images/RiverscapesLogo.png'}\n                            alt=\"logo\"\n                        />\n                    </a>\n                    <Typography variant=\"subtitle1\">{title}</Typography>\n                    <div className={classes.spacer} />\n                    {signOutHandler && (\n                        <Button onClick={(): void => signOutHandler()} color=\"inherit\">\n                            Sign Out\n                        </Button>\n                    )}\n                </Toolbar>\n            </AppBar>\n        </React.Fragment>\n    )\n}\n\nexport default TopBar\n","import { createMuiTheme, ThemeOptions } from '@material-ui/core/styles'\nimport { indigo, orange } from '@material-ui/core/colors'\n// import { ThemeOptions } from '@material-ui/core/styles/createTypography'\n// import { fade } from '@material-ui/core/styles/colorManipulator'\n\n// We need this so that it doesn't freak out abotu old variants\n// const typography = {\n//     useNextVariants: true\n// }\n\nconst home: ThemeOptions = {\n    palette: {\n        primary: {\n            main: indigo[500]\n        },\n        secondary: {\n            main: orange[600],\n            contrastText: '#FFFFFF'\n        },\n        text: {\n            // primary: colors.jet,\n            // secondary: fade(colors.jet, 0.7)\n        }\n    }\n    // typography\n    // overrides\n}\n\nconst homeDark: ThemeOptions = {\n    ...home,\n    palette: {\n        ...home.palette,\n        type: 'dark'\n    }\n}\n\nexport default {\n    home: createMuiTheme(home as ThemeOptions),\n    homeDark: createMuiTheme(homeDark as ThemeOptions)\n}\n","import React from 'react'\nimport { ThemeProvider } from '@material-ui/styles'\n// import { Footer } from '@riverscapes/react-common'\nimport MapsTopbar from './MapsTopbar'\nimport { AppFrame } from '@northarrowresearch/react-common'\nimport { History } from 'react-router-dom'\nimport { ContainerProps } from '@material-ui/core/Container'\n// import { version } from '../config'\nimport themes from '../themes'\n// import log from 'loglevel'\n\ninterface Props {\n    children: React.ReactNode | React.ReactNode[]\n    history?: History\n    title?: string\n    containerProps?: Partial<ContainerProps>\n    signOut?: () => Promise<void>\n}\n\nconst AppWrapper: React.FC<Props> = ({ children, history, signOut, containerProps, title }: Props) => {\n    return (\n        <ThemeProvider theme={themes.home}>\n            <AppFrame\n                containerProps={containerProps}\n                noScroll\n                fullWidth\n                topbar={<MapsTopbar history={history} title={title || 'Riverscapes Maps'} signOutHandler={signOut} />}\n                // footer={<Footer version={version as string} />}\n            >\n                {children}\n            </AppFrame>\n        </ThemeProvider>\n    )\n}\nexport default AppWrapper\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Paper from '@material-ui/core/Paper'\nimport Avatar from '@material-ui/core/Avatar'\nimport Container from '@material-ui/core/Container'\nimport Typography from '@material-ui/core/Typography'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar'\n// import MenuIcon from '@material-ui/icons/Menu'\nimport { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles((theme) => ({\n    container: {\n        height: '100%',\n        display: 'flex',\n        flexDirection: 'column'\n    },\n    spacer: {\n        flexGrow: 1\n    },\n    root: {\n        padding: theme.spacing(2),\n        margin: theme.spacing(2)\n    },\n    logo: {},\n    logoContainer: {\n        padding: theme.spacing(2),\n        textAlign: 'center'\n    }\n}))\n\nconst MapChooser = ({ maps, changeMaps }) => {\n    const classes = useStyles()\n    return (\n        <Container maxWidth=\"sm\" className={classes.container}>\n            <div className={classes.spacer} />\n            <Paper className={classes.root} elevation={1}>\n                <div className={classes.logoContainer}>\n                    <img className={classes.logo} src={process.env.PUBLIC_URL + '/RiverscapesLogo.png'} alt=\"logo\" />\n                </div>\n                <Typography variant=\"h5\">Choose a map:</Typography>\n                <List>\n                    {maps &&\n                        maps.map((p, idx) => (\n                            <ListItem key={`progKey-${idx}`} button divider onClick={(): void => changeMaps(p.url)}>\n                                <ListItemAvatar>\n                                    <Avatar alt=\"programname\">{p.title.substr(0, 1)}</Avatar>\n                                </ListItemAvatar>\n                                <ListItemText primary={p.title} />\n                            </ListItem>\n                        ))}\n                </List>\n            </Paper>\n            <div className={classes.spacer} />\n        </Container>\n    )\n}\n\nMapChooser.propTypes = {\n    maps: PropTypes.array.isRequired,\n    changeMaps: PropTypes.func.isRequired\n}\n\nexport default MapChooser\n","import React, { useEffect, useState, useMemo } from 'react'\nimport MapApps from './mapApps'\nimport AppWrapper from './AppWrapper'\nimport { History, Location } from 'react-router-dom'\nimport { devSetup, Loading } from '@northarrowresearch/react-common'\nimport { useHosted } from '@northarrowresearch/react-auth'\nimport MapChooser from './MapChooser'\nimport { awsAuth, warehouseIconUrl, version } from '../config'\nimport { MapType } from '../types'\nimport log from 'loglevel'\n\ndevSetup()\n\nexport interface Props {\n    history: History\n    location: Location\n}\n\nconst AppConnect: React.FC<Props> = ({ location, history }: Props) => {\n    const [maps, setMaps] = useState<MapType[]>([])\n    const [stateObj, setStateObj] = useState<MapType>()\n    const [loading, setLoading] = useState<boolean>(true)\n    const { isAuthenticated, signOut } = useHosted(awsAuth, true, true)\n    // const isAuthenticated = true\n    // const signOut = (): Promise<void> => Promise.resolve()\n\n    let stateUrl: string | null = null\n    try {\n        stateUrl = location.pathname.split('/').filter((s) => s.length > 0)[0]\n    } catch {}\n\n    useEffect(() => {\n        if (!stateUrl || !maps || maps.length === 0) {\n            document.title = `RS Maps`\n            setStateObj(undefined)\n            return\n        }\n        const state = maps.find((s) => s.url === stateUrl)\n        document.title = `${state ? state.title : 'RS Maps'}`\n        setStateObj(state || undefined)\n    }, [maps, location.pathname, stateUrl])\n\n    useEffect(() => {\n        if (!isAuthenticated) return\n        const url = new URL(`${process.env.PUBLIC_URL}/maps.json`, window.location.href)\n        fetch(url.href)\n            .then((response) => response.json())\n            .then((responseJson: MapType[]) => {\n                setLoading(false)\n                setMaps(responseJson)\n            })\n            .catch((err): void => {\n                log.error(err)\n            })\n    }, [isAuthenticated])\n\n    const logoSVG = <img src={warehouseIconUrl} alt=\"logo\" />\n\n    const mapRendered = useMemo(() => {\n        if (!stateUrl) return null\n        switch (stateUrl) {\n            case 'VBET':\n                return <MapApps.VBET state={stateObj as MapType} />\n            case 'beaver_observation':\n                return <MapApps.BeaverObservation state={stateObj as MapType} />\n            case 'BRAT':\n                return <MapApps.BRAT state={stateObj as MapType} location={location} history={history} />\n        }\n    }, [stateUrl, stateObj, location, history])\n\n    if (loading) {\n        return (\n            <AppWrapper>\n                <Loading logoSVG={logoSVG} title={'Riverscapes Warehouse'} message={'Loading Maps'} version={version} />\n            </AppWrapper>\n        )\n    } else if (!stateObj || !mapRendered) {\n        return (\n            <AppWrapper containerProps={{ maxWidth: 'sm' }} signOut={signOut} title=\"Riverscapes Maps\">\n                <MapChooser maps={maps} changeMaps={(pName): void => history.push('/' + pName)} />\n            </AppWrapper>\n        )\n    } else {\n        return (\n            <AppWrapper containerProps={{ maxWidth: 'sm' }} signOut={signOut} title={stateObj.title}>\n                {mapRendered}\n            </AppWrapper>\n        )\n    }\n}\n\nexport default AppConnect\n","/* eslint-disable @typescript-eslint/no-use-before-define */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n        // [::1] is the IPv6 localhost address.\n        window.location.hostname === '[::1]' ||\n        // 127.0.0.0/8 are considered localhost for IPv4.\n        window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n)\n\ntype Config = {\n    onSuccess?: (registration: ServiceWorkerRegistration) => void\n    onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config)\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    )\n                })\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config)\n            }\n        })\n    }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then((registration) => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing\n                if (installingWorker == null) {\n                    return\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            )\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration)\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.')\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration)\n                            }\n                        }\n                    }\n                }\n            }\n        })\n        .catch((error) => {\n            console.error('Error during service worker registration:', error)\n        })\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: { 'Service-Worker': 'script' }\n    })\n        .then((response) => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type')\n            if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then((registration) => {\n                    registration.unregister().then(() => {\n                        window.location.reload()\n                    })\n                })\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config)\n            }\n        })\n        .catch(() => {\n            console.log('No internet connection found. App is running in offline mode.')\n        })\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready\n            .then((registration) => {\n                registration.unregister()\n            })\n            .catch((error) => {\n                console.error(error.message)\n            })\n    }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport AppConnect from './components/App.connect'\nimport { HashRouter, Route } from 'react-router-dom'\nimport log from 'loglevel'\nimport { devSetup } from '@northarrowresearch/react-common'\n\nimport * as serviceWorker from './serviceWorker'\n// Here's our global overrides css\nimport './base.css'\nimport 'react-vis/dist/style.css'\n// This does its own process.env.NODE_ENV check\n// In production it only presents a minimal set of tools\ndevSetup()\n\n// This is the font we need\nrequire('typeface-roboto')\n\nReactDOM.render(\n    <HashRouter basename=\"/\">\n        <Route path=\"*\" render={(props): React.ReactElement => <AppConnect {...props} />} />\n    </HashRouter>,\n    document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register()\n\n// On android this will trick the back button into not closing the app\nwindow.addEventListener('load', () => {\n    window.history.pushState({}, '')\n})\n\n// In Chrome > 52 we need to explicitly request persistent storage to make sure our\n// stuff isn't cleaned up automatically.\nif (navigator.storage && navigator.storage.persist) {\n    navigator.storage.persist().then((granted) => {\n        if (granted) {\n            log.debug('Storage will not be cleared except by explicit user action')\n        } else {\n            log.warn('Storage may be cleared by the UA under storage pressure.')\n        }\n    })\n} else {\n    log.warn('navigator.storage API not implemented.')\n}\n"],"sourceRoot":""}