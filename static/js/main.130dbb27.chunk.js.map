{"version":3,"sources":["config.ts","components/mapApps/VBET/VBET.mapStyle.ts","components/mapApps/VBET/VBET.tsx","components/mapApps/VBET/VBET.style.ts","components/mapApps/index.ts","lib/stylebuild.ts","components/MapsTopbar.tsx","themes.ts","components/AppWrapper.tsx","components/MapChooser.tsx","components/App.connect.tsx","serviceWorker.ts","index.tsx"],"names":["mapConfig","process","version","REACT_APP_VERSION","redirectUrl","REACT_APP_GRAPHQL","REACT_APP_CDN","URL","endsWith","window","location","origin","awsAuth","Auth","region","userPoolId","userPoolWebClientId","mandatorySignIn","oauth","domain","scope","redirectSignIn","redirectSignOut","responseType","mapSettings","menuVals","showHillshade","console","log","vbetSources","tiles","reduce","acc","vbs","sourceName","url","type","minzoom","minZoom","maxzoom","maxZoom","bounds","vbetLayers","Object","keys","accLayers","mvk","newStyles","id","name","source","json","vector_layers","layout","paint","fillColor","lineColor","sources","hillshade","rasterTiles","Hillshade","scheme","tileSize","contextSource","layers","visibility","metadata","js","android","ios","sprite","glyphs","created","modified","owner","draft","useStyles","makeStyles","theme","root","height","mapContainer","mapMenuContainer","left","spacing","top","formControl","marginTop","VBET","state","classes","useState","loading","setLoading","setHillshade","setMapSettings","setMenuVals","baseLayer","setBaseLayer","mapBoxRef","useRef","curZoomRef","useEffect","urlPromises","map","k","tileset","fetch","then","res","d","menuName","JSON","parse","parseInt","center","catch","err","Promise","all","darr","debug","Math","min","max","zoom","longitude","latitude","finalStyle","useMemo","base","merge","bs","mapStyles","DefaultMapStyles","style","className","lockToBounds","mapBoxToken","reactMapGLProps","viewport","onViewportChange","size","projection","current","Typography","color","FormControl","component","FormLabel","FormGroup","mtObj","idx","FormControlLabel","onClick","newVals","info","handleChange","key","control","Checkbox","checked","Boolean","label","legend","currStyle","setCurrStyle","display","alignItems","width","padding","textShadow","backgroundImage","backgroundRepeat","backgroundPosition","backgroundSize","backgroundColor","spacer","flexGrow","logo","marginRight","TopBar","title","signOutHandler","history","Fragment","AppBar","position","Toolbar","disableGutters","href","src","alt","variant","Button","home","palette","primary","main","indigo","secondary","orange","contrastText","text","homeDark","createMuiTheme","AppWrapper","children","signOut","containerProps","ThemeProvider","themes","noScroll","fullWidth","topbar","MapsTopbar","container","flexDirection","margin","logoContainer","textAlign","MapChooser","maps","changeMaps","Container","maxWidth","Paper","elevation","List","p","ListItem","button","divider","ListItemAvatar","Avatar","substr","ListItemText","devSetup","AppConnect","setMaps","stateObj","setStateObj","useHosted","isAuthenticated","stateUrl","pathname","split","filter","s","length","document","undefined","find","response","responseJson","error","logoSVG","mapRendered","message","pName","push","isLocalhost","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","require","ReactDOM","render","basename","path","props","getElementById","addEventListener","headers","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","pushState","storage","persist","granted","warn"],"mappings":"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","file":"static/js/main.130dbb27.chunk.js","sourcesContent":["export default {\n    // Bright Pastel\n    tagColors: [\n        '#418CF0',\n        '#FCB441',\n        '#E0400A',\n        '#056492',\n        '#BFBFBF',\n        '#1A3B69',\n        '#FFE382',\n        '#129CDD',\n        '#CA6B4B',\n        '#005CDB',\n        '#F3D288',\n        '#506381',\n        '#F1B9A8',\n        '#E0830A',\n        '#7893BE'\n    ]\n}\n\nexport const mapConfig = {\n    mapBoxToken: process.env.REACT_APP_MAPBOX_TOKEN\n    // styles: require('./components/styles')\n}\n\nexport const version = process.env.REACT_APP_VERSION\n\nexport const warehouseIconUrl = process.env.PUBLIC_URL + '/RiverscapesLogo.png'\n\nexport const endpoints = {\n    graphql: process.env.REACT_APP_GRAPHQL,\n    cdn: process.env.REACT_APP_CDN\n}\n\nexport const redirectUrl = new URL(\n    process.env.PUBLIC_URL.endsWith('/') ? process.env.PUBLIC_URL : process.env.PUBLIC_URL + '/',\n    window.location.origin\n)\n\nexport const awsAuth = {\n    Auth: {\n        region: process.env.REACT_APP_AWS_REGION_DEPLOY,\n        userPoolId: process.env.REACT_APP_AWS_USERPOOLID,\n        userPoolWebClientId: process.env.REACT_APP_AWS_USERPOOLWEBCLIENTID,\n        mandatorySignIn: true,\n        oauth: {\n            domain: process.env.REACT_APP_HOSTED_DOMAIN,\n            scope: ['email', 'profile', 'openid'],\n            redirectSignIn: redirectUrl,\n            redirectSignOut: redirectUrl,\n            responseType: 'code'\n        }\n    }\n}\n","const vbetStyle = (mapSettings, menuVals, showHillshade): any => {\n    console.log('vbetStyle')\n    const vbetSources = mapSettings.tiles.reduce(\n        (acc, vbs) => ({\n            ...acc,\n            [vbs.sourceName]: {\n                tiles: [vbs.url],\n                type: 'vector',\n                minzoom: vbs.minZoom,\n                maxzoom: vbs.maxZoom,\n                bounds: vbs.bounds\n            }\n        }),\n        {}\n    )\n\n    // const vbetLayers = []\n    const vbetLayers = Object.keys(menuVals).reduce((accLayers: any[], mvk: string) => {\n        const newStyles = [\n            {\n                id: `VBET_${menuVals[mvk].name}_fill`,\n                type: 'fill',\n                source: menuVals[mvk].sourceName,\n                'source-layer': menuVals[mvk].json.vector_layers[0].id,\n                minzoom: mapSettings.minZoom - 1,\n                maxzoom: mapSettings.maxZoom + 1,\n                layout: {},\n                paint: {\n                    'fill-opacity': [\n                        'interpolate',\n                        ['linear'],\n                        ['zoom'],\n                        mapSettings.minZoom,\n                        0.7,\n                        mapSettings.maxZoom,\n                        0.2\n                    ],\n                    'fill-color': menuVals[mvk].fillColor\n                }\n            },\n            {\n                id: `VBET_${menuVals[mvk].name}_lines`,\n                type: 'line',\n                source: menuVals[mvk].sourceName,\n                'source-layer': menuVals[mvk].json.vector_layers[0].id,\n                layout: {},\n                minzoom: mapSettings.minZoom - 1,\n                maxzoom: mapSettings.maxZoom + 1,\n                paint: {\n                    'line-color': menuVals[mvk].lineColor,\n                    'line-opacity': 1.0,\n                    'line-width': ['interpolate', ['linear'], ['zoom'], mapSettings.minZoom, 1, mapSettings.maxZoom, 2]\n                }\n            }\n        ]\n        return [...accLayers, ...newStyles]\n    }, [])\n\n    const sources = {\n        ...vbetSources,\n        hillshade: {\n            type: 'raster',\n            tiles: [`${process.env.REACT_APP_RS_TILES_CDN}/${mapSettings.rasterTiles.Hillshade}/{z}/{x}/{y}.png`],\n            // bounds: [ -113.01440783404563, 45.93865076842336, -120.81442065207882, 48.168107678462874 ],\n            scheme: 'tms',\n            minzoom: 5,\n            maxzoom: 12,\n            tileSize: 256\n        },\n        contextSource: {\n            tiles: [`${process.env.REACT_APP_BRAT_CDN}/crb/context/{z}/{x}/{y}.pbf`],\n            type: 'vector',\n            minzoom: 6,\n            maxzoom: 12,\n            bounds: [-124.091448, 41.127826, -109.762491, 48.997885]\n        }\n    }\n    const layers = [\n        {\n            id: 'Hillshade',\n            type: 'raster',\n            source: 'hillshade',\n            // 'source-layer': 'hillshade',\n            // 'interactive': false\n            layout: {\n                visibility: showHillshade ? 'visible' : 'none'\n            },\n            paint: {}\n        },\n        // {\n        //   'id': 'HUC8Fill',\n        //   'type': 'fill',\n        //   'source': 'contextSource',\n        //   'source-layer': 'huc8',\n        //   'minzoom': 5,\n        //   'maxzoom': 10.2,\n        //   'layout': {},\n        //   'paint': {\n        //     'fill-opacity': [\n        //       'interpolate',\n        //       ['linear'],\n        //       ['zoom'],\n        //       6, 0.3,\n        //       11, 0\n        //     ],\n        //     'fill-color': '#FF0000'\n        //   }\n        // },\n        ...vbetLayers,\n        {\n            id: 'HUC8LInes',\n            type: 'line',\n            source: 'contextSource',\n            'source-layer': 'huc8',\n            layout: {},\n            minzoom: 5,\n            maxzoom: 19,\n            paint: {\n                'line-color': '#FF0000',\n                'line-opacity': 0.5,\n                'line-width': ['interpolate', ['linear'], ['zoom'], 8, 1, 14, 4]\n            }\n        },\n        {\n            id: 'HUC8_Labels',\n            type: 'symbol',\n            source: 'contextSource',\n            'source-layer': 'huc8',\n            minzoom: 5,\n            maxzoom: 19,\n            layout: {\n                'text-size': ['interpolate', ['linear'], ['zoom'], 8, 10, 14, 30],\n                'text-field': ['to-string', ['concat', ['get', 'HUC8'], '\\n', ['get', 'NAME']]]\n            },\n            paint: {\n                'text-color': '#000000',\n                'text-halo-width': 2,\n                'text-halo-blur': 4,\n                'text-halo-color': '#FFFFFF'\n            }\n        }\n    ]\n    return {\n        version: 8,\n        name: 'Outdoors',\n        metadata: {\n            'mapbox:type': 'default',\n            'mapbox:origin': 'outdoors-v11',\n            'mapbox:autocomposite': true,\n            'mapbox:groups': {},\n            'mapbox:sdk-support': { js: '0.50.0', android: '6.7.0', ios: '4.6.0' }\n        },\n        // 'center': [ -114.19115411710368, 43.32991248939766 ],\n        // 'zoom': 9.061958904803715,\n        // 'bearing': 0,\n        // 'pitch': 0,\n        sources: { ...sources },\n        sprite: 'mapbox://sprites/pipbailey/cjvfq2uwm0vqk1foby0dtwdmk/ayuihl2d38ufkjhmu0pwx0cto',\n        glyphs: 'mapbox://fonts/pipbailey/{fontstack}/{range}.pbf',\n        layers: [...layers],\n        created: '2019-05-08T21:16:06.811Z',\n        id: 'cjvfq2uwm0vqk1foby0dtwdmk',\n        modified: '2019-05-08T22:02:34.939Z',\n        owner: 'pipbailey',\n        visibility: 'private',\n        draft: false\n    }\n}\n\nexport default {\n    vbetStyle\n}\n","import React, { useState, useMemo, useRef, useEffect } from 'react'\n\nimport FormControl from '@material-ui/core/FormControl'\nimport FormLabel from '@material-ui/core/FormLabel'\nimport FormGroup from '@material-ui/core/FormGroup'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport Checkbox from '@material-ui/core/Checkbox'\nimport Typography from '@material-ui/core/Typography'\n\nimport { MapPaper, Legend, BaseMap, StyleButtons, MapStyles as DefaultMapStyles } from '@northarrowresearch/react-maps'\n\nimport { makeStyles } from '@material-ui/core/styles'\n\nimport { combineStyles } from '../../../lib/stylebuild'\nimport { MapType } from '../../../types'\nimport { mapConfig } from '../../../config'\nimport style from './VBET.style'\nimport mapStyles from './VBET.mapStyle'\nimport log from 'loglevel'\n\nconst useStyles = makeStyles(style)\n\ninterface Props {\n    state: MapType\n}\n/**\n * This is the over-arching wrapper for the app. It combines all the\n * necessary pieces\n */\nconst VBET: React.FC<Props> = ({ state }: Props) => {\n    const classes = useStyles()\n    const [loading, setLoading] = useState<boolean>(true)\n    const [showHillshade, setHillshade] = useState<boolean>(true)\n    const [mapSettings, setMapSettings] = useState<any>()\n    const [menuVals, setMenuVals] = useState({})\n    const [baseLayer, setBaseLayer] = useState<number>(1)\n    const mapBoxRef = useRef()\n    const curZoomRef = useRef()\n\n    const handleChange = (mtObj): void => {\n        const newVals = { ...menuVals }\n        log.info('TEST', newVals, mtObj)\n        if (menuVals[mtObj.name]) {\n            delete newVals[mtObj.name]\n        } else {\n            newVals[mtObj.name] = mtObj\n        }\n        setMenuVals(newVals)\n    }\n\n    useEffect(() => {\n        if (!loading) return\n        const urlPromises = Object.keys(state.tiles).map((k) => {\n            const tileset = state.tiles[k] as string[]\n            const url = `${process.env.REACT_APP_RS_TILES_CDN}/${tileset[0]}/metadata.json`\n            return fetch(url)\n                .then((res) => res.json())\n                .then((d) => ({\n                    ...d,\n                    name: k,\n                    menuName: `VBET ${k}%`,\n                    lineColor: tileset[1],\n                    fillColor: tileset[2],\n                    sourceName: `vbet_${k}`,\n                    url: `${process.env.REACT_APP_RS_TILES_CDN}/${tileset[0]}/{z}/{x}/{y}.pbf`,\n                    json: JSON.parse(d.json),\n                    minZoom: parseInt(d.minzoom, 10),\n                    maxZoom: parseInt(d.maxzoom, 10),\n                    bounds: JSON.parse(`[${d.bounds}]`),\n                    center: JSON.parse(`[${d.center}]`)\n                }))\n                .catch((err) => {\n                    console.log('DATA::fetch_tile::err:', err) // Print the error if one occurred\n                })\n        })\n        Promise.all(urlPromises)\n            .then((darr) => {\n                log.debug('here', darr)\n                const bounds = [\n                    Math.min(...darr.map((d) => d.bounds[0])),\n                    Math.min(...darr.map((d) => d.bounds[1])),\n                    Math.max(...darr.map((d) => d.bounds[2])),\n                    Math.max(...darr.map((d) => d.bounds[3]))\n                ]\n                setMapSettings({\n                    bounds,\n                    maxZoom: Math.max(13, ...darr.map((d) => d.maxZoom)),\n                    minZoom: Math.min(5, ...darr.map((d) => d.minZoom)),\n                    zoom: Math.min(...darr.map((d) => d.minZoom)),\n                    longitude: (bounds[0] + bounds[2]) / 2,\n                    latitude: (bounds[1] + bounds[3]) / 2,\n                    rasterTiles: state.rasterTiles,\n                    tiles: darr\n                })\n                // activate the first layer we have\n                setMenuVals({\n                    [darr[0].name]: darr[0]\n                })\n                setLoading(false)\n            })\n            .catch((err) => {\n                setLoading(false)\n            })\n    }, [state.rasterTiles, state.tiles, loading])\n\n    const finalStyle = useMemo(() => {\n        if (!mapSettings) return null\n        const bs = mapStyles.vbetStyle(mapSettings, menuVals, showHillshade)\n        return combineStyles(DefaultMapStyles[baseLayer].style, bs)\n    }, [baseLayer, menuVals, showHillshade, mapSettings])\n\n    const onViewportChange = ({ viewport: { latitude, longitude, zoom }, size, projection, map }): void => {\n        if (!mapBoxRef.current) mapBoxRef.current = map\n        curZoomRef.current = zoom\n        console.log('zoom', latitude, longitude, zoom)\n    }\n\n    if (loading || !mapSettings) return <div>loading...</div>\n\n    return (\n        <div className={classes.mapContainer}>\n            <BaseMap\n                lockToBounds\n                mapBoxToken={mapConfig.mapBoxToken}\n                // Logan, UT:\n                reactMapGLProps={{\n                    // clickRadius={2}\n                    // onClick={onClick}\n                    maxZoom: mapSettings.maxZoom,\n                    minZoom: mapSettings.minZoom\n                }}\n                bounds={mapSettings.bounds}\n                viewport={{\n                    zoom: mapSettings.zoom || 12,\n                    latitude: mapSettings.latitude,\n                    longitude: mapSettings.longitude\n                }}\n                onViewportChange={onViewportChange}\n                mapStyles={[{ style: finalStyle }]}\n            >\n                <MapPaper className={classes.mapMenuContainer}>\n                    <Typography color=\"error\">\n                        <strong>WARNING</strong>: Model result are not verified. Do not use for anything important.\n                    </Typography>\n                    <FormControl component=\"fieldset\" className={classes.formControl}>\n                        <FormLabel component=\"legend\">Thresholding</FormLabel>\n                        <FormGroup>\n                            {mapSettings.tiles.map((mtObj, idx) => (\n                                <FormControlLabel\n                                    onClick={(): void => handleChange(mtObj)}\n                                    key={`control-check-${idx}`}\n                                    control={<Checkbox checked={Boolean(menuVals[mtObj.name])} />}\n                                    label={mtObj.menuName}\n                                />\n                            ))}\n                        </FormGroup>\n                    </FormControl>\n                    <FormControl component=\"fieldset\" className={classes.formControl}>\n                        <FormGroup>\n                            <FormControlLabel\n                                onClick={(): void => setHillshade(!showHillshade)}\n                                control={<Checkbox checked={showHillshade} />}\n                                label=\"Hillshade Raster\"\n                            />\n                        </FormGroup>\n                    </FormControl>\n                    <Legend\n                        legend={Object.keys(menuVals).map((mvk) => ({\n                            label: menuVals[mvk].menuName,\n                            color: menuVals[mvk].fillColor\n                        }))}\n                    />\n                </MapPaper>\n                <StyleButtons\n                    currStyle={baseLayer}\n                    mapStyles={DefaultMapStyles}\n                    setCurrStyle={(idx?: number): void => setBaseLayer(idx || 0)}\n                />\n            </BaseMap>\n        </div>\n    )\n}\n\nexport default VBET\n","import { Theme, StyleRules } from '@material-ui/core'\n\nexport default (theme: Theme): StyleRules => ({\n    root: {\n        height: '100%'\n    },\n    mapContainer: {\n        height: '100%'\n    },\n    mapMenuContainer: {\n        left: theme.spacing(3),\n        top: theme.spacing(3)\n    },\n    formControl: {\n        marginTop: theme.spacing(2)\n    }\n})\n","import VBET from './VBET/VBET'\n\nexport default {\n    VBET\n}\n","import log from 'loglevel'\n\nexport function combineStyles(base: any, merge: any): any {\n    log.debug('combineStyles', { base, merge })\n    return {\n        ...base,\n        sources: {\n            ...base.sources,\n            ...merge.sources\n        },\n        layers: [...base.layers, ...merge.layers]\n    }\n}\n","import React from 'react'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport AppBar from '@material-ui/core/AppBar'\n\nimport Button from '@material-ui/core/Button'\nimport { History } from 'react-router-dom'\n\nimport { makeStyles, Theme, StyleRules } from '@material-ui/core/styles'\nimport { Typography } from '@material-ui/core'\n\nconst useStyles = makeStyles(\n    (theme: Theme): StyleRules => ({\n        root: {\n            display: 'flex',\n            alignItems: 'center',\n            width: '100%',\n            padding: theme.spacing(0, 1),\n            textShadow: '3px 3px 3px rgba(0,0,0,0.7)',\n            backgroundImage: `url(https://northarrowresearchlabs.github.io/riverscapes/HeaderBackground.png)`,\n            backgroundRepeat: 'no-repeat',\n            backgroundPosition: '0% 50%',\n            backgroundSize: 'cover',\n            backgroundColor: '#444444'\n        },\n        spacer: { flexGrow: 1 },\n        logo: {\n            height: 40,\n            width: 40,\n            marginRight: theme.spacing(2)\n        }\n    })\n)\n\ninterface Props {\n    title: string\n    history?: History\n    signOutHandler?: () => void\n}\n\nconst TopBar: React.FC<Props> = ({ title, signOutHandler, history }: Props) => {\n    const classes = useStyles()\n\n    // const handleNavigate = (nm: Program): void => {\n    //     handleMobileMenuClose()\n    //     if (history) history.push(`/${nm.machineName}`)\n    // }\n\n    return (\n        <React.Fragment>\n            <AppBar position=\"static\">\n                <Toolbar className={classes.root} disableGutters>\n                    <a href=\"http://riverscapes.xyz/\">\n                        <img\n                            className={classes.logo}\n                            src={'https://riverscapes.xyz/assets/images/RiverscapesLogo.png'}\n                            alt=\"logo\"\n                        />\n                    </a>\n                    <Typography variant=\"subtitle1\">{title}</Typography>\n                    <div className={classes.spacer} />\n                    {signOutHandler && (\n                        <Button onClick={(): void => signOutHandler()} color=\"inherit\">\n                            Sign Out\n                        </Button>\n                    )}\n                </Toolbar>\n            </AppBar>\n        </React.Fragment>\n    )\n}\n\nexport default TopBar\n","import { createMuiTheme, ThemeOptions } from '@material-ui/core/styles'\nimport { indigo, orange } from '@material-ui/core/colors'\n// import { ThemeOptions } from '@material-ui/core/styles/createTypography'\n// import { fade } from '@material-ui/core/styles/colorManipulator'\n\n// We need this so that it doesn't freak out abotu old variants\n// const typography = {\n//     useNextVariants: true\n// }\n\nconst home: ThemeOptions = {\n    palette: {\n        primary: {\n            main: indigo[500]\n        },\n        secondary: {\n            main: orange[600],\n            contrastText: '#FFFFFF'\n        },\n        text: {\n            // primary: colors.jet,\n            // secondary: fade(colors.jet, 0.7)\n        }\n    }\n    // typography\n    // overrides\n}\n\nconst homeDark: ThemeOptions = {\n    ...home,\n    palette: {\n        ...home.palette,\n        type: 'dark'\n    }\n}\n\nexport default {\n    home: createMuiTheme(home as ThemeOptions),\n    homeDark: createMuiTheme(homeDark as ThemeOptions)\n}\n","import React from 'react'\nimport { ThemeProvider } from '@material-ui/styles'\n// import { Footer } from '@riverscapes/react-common'\nimport MapsTopbar from './MapsTopbar'\nimport { AppFrame } from '@northarrowresearch/react-common'\nimport { History } from 'react-router-dom'\nimport { ContainerProps } from '@material-ui/core/Container'\n// import { version } from '../config'\nimport themes from '../themes'\n// import log from 'loglevel'\n\ninterface Props {\n    children: React.ReactNode | React.ReactNode[]\n    history?: History\n    title?: string\n    containerProps?: Partial<ContainerProps>\n    signOut?: () => Promise<void>\n}\n\nconst AppWrapper: React.FC<Props> = ({ children, history, signOut, containerProps, title }: Props) => {\n    return (\n        <ThemeProvider theme={themes.home}>\n            <AppFrame\n                containerProps={containerProps}\n                noScroll\n                fullWidth\n                topbar={<MapsTopbar history={history} title={title || 'Riverscapes Maps'} signOutHandler={signOut} />}\n                // footer={<Footer version={version as string} />}\n            >\n                {children}\n            </AppFrame>\n        </ThemeProvider>\n    )\n}\nexport default AppWrapper\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Paper from '@material-ui/core/Paper'\nimport Avatar from '@material-ui/core/Avatar'\nimport Container from '@material-ui/core/Container'\nimport Typography from '@material-ui/core/Typography'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar'\n// import MenuIcon from '@material-ui/icons/Menu'\nimport { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles((theme) => ({\n    container: {\n        height: '100%',\n        display: 'flex',\n        flexDirection: 'column'\n    },\n    spacer: {\n        flexGrow: 1\n    },\n    root: {\n        padding: theme.spacing(2),\n        margin: theme.spacing(2)\n    },\n    logo: {},\n    logoContainer: {\n        padding: theme.spacing(2),\n        textAlign: 'center'\n    }\n}))\n\nconst MapChooser = ({ maps, changeMaps }) => {\n    const classes = useStyles()\n    return (\n        <Container maxWidth=\"sm\" className={classes.container}>\n            <div className={classes.spacer} />\n            <Paper className={classes.root} elevation={1}>\n                <div className={classes.logoContainer}>\n                    <img className={classes.logo} src={process.env.PUBLIC_URL + '/RiverscapesLogo.png'} alt=\"logo\" />\n                </div>\n                <Typography variant=\"h5\">Choose a map:</Typography>\n                <List>\n                    {maps &&\n                        maps.map((p, idx) => (\n                            <ListItem key={`progKey-${idx}`} button divider onClick={(): void => changeMaps(p.url)}>\n                                <ListItemAvatar>\n                                    <Avatar alt=\"programname\">{p.title.substr(0, 1)}</Avatar>\n                                </ListItemAvatar>\n                                <ListItemText primary={p.title} />\n                            </ListItem>\n                        ))}\n                </List>\n            </Paper>\n            <div className={classes.spacer} />\n        </Container>\n    )\n}\n\nMapChooser.propTypes = {\n    maps: PropTypes.array.isRequired,\n    changeMaps: PropTypes.func.isRequired\n}\n\nexport default MapChooser\n","import React, { useEffect, useState, useMemo } from 'react'\nimport MapApps from './mapApps'\nimport AppWrapper from './AppWrapper'\nimport { History, Location } from 'react-router-dom'\nimport { devSetup, Loading } from '@northarrowresearch/react-common'\nimport { useHosted } from '@northarrowresearch/react-auth'\nimport MapChooser from './MapChooser'\nimport { awsAuth, warehouseIconUrl, version } from '../config'\nimport { MapType } from '../types'\nimport log from 'loglevel'\n\ndevSetup()\n\ninterface Props {\n    history: History\n    location: Location\n}\n\nconst AppConnect: React.FC<Props> = ({ location, history }: Props) => {\n    const [maps, setMaps] = useState<MapType[]>([])\n    const [stateObj, setStateObj] = useState<MapType>()\n    const [loading, setLoading] = useState<boolean>(true)\n    const { isAuthenticated, signOut } = useHosted(awsAuth, true, true)\n\n    let stateUrl: string | null = null\n    try {\n        stateUrl = location.pathname.split('/').filter((s) => s.length > 0)[0]\n    } catch {}\n\n    useEffect(() => {\n        if (!stateUrl || !maps || maps.length === 0) {\n            document.title = `RS Maps`\n            setStateObj(undefined)\n            return\n        }\n        const state = maps.find((s) => s.url === stateUrl)\n        document.title = `RS Maps: ${stateUrl}`\n        setStateObj(state)\n    }, [maps, location.pathname, stateUrl])\n\n    useEffect(() => {\n        if (!isAuthenticated) return\n        const url = new URL(`${process.env.PUBLIC_URL}/maps.json`, window.location.href)\n        fetch(url.href)\n            .then((response) => response.json())\n            .then((responseJson: MapType[]) => {\n                setLoading(false)\n                setMaps(responseJson)\n            })\n            .catch((err): void => {\n                log.error(err)\n            })\n    }, [isAuthenticated])\n\n    const logoSVG = <img src={warehouseIconUrl} alt=\"logo\" />\n\n    const mapRendered = useMemo(() => {\n        if (!stateUrl) return null\n        switch (stateUrl) {\n            case 'VBET':\n                return <MapApps.VBET state={stateObj as MapType} />\n        }\n    }, [stateUrl, stateObj])\n\n    if (loading) {\n        return (\n            <AppWrapper>\n                <Loading logoSVG={logoSVG} title={'Riverscapes Warehouse'} message={'Loading Maps'} version={version} />\n            </AppWrapper>\n        )\n    } else if (!stateObj || !mapRendered) {\n        return (\n            <AppWrapper containerProps={{ maxWidth: 'sm' }} signOut={signOut} title=\"Riverscapes Maps\">\n                <MapChooser maps={maps} changeMaps={(pName): void => history.push('/' + pName)} />\n            </AppWrapper>\n        )\n    } else {\n        return (\n            <AppWrapper containerProps={{ maxWidth: 'sm' }} signOut={signOut} title={stateObj.title}>\n                {mapRendered}\n            </AppWrapper>\n        )\n    }\n}\n\nexport default AppConnect\n","/* eslint-disable @typescript-eslint/no-use-before-define */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n        // [::1] is the IPv6 localhost address.\n        window.location.hostname === '[::1]' ||\n        // 127.0.0.0/8 are considered localhost for IPv4.\n        window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n)\n\ntype Config = {\n    onSuccess?: (registration: ServiceWorkerRegistration) => void\n    onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config)\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    )\n                })\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config)\n            }\n        })\n    }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then((registration) => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing\n                if (installingWorker == null) {\n                    return\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            )\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration)\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.')\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration)\n                            }\n                        }\n                    }\n                }\n            }\n        })\n        .catch((error) => {\n            console.error('Error during service worker registration:', error)\n        })\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: { 'Service-Worker': 'script' }\n    })\n        .then((response) => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type')\n            if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then((registration) => {\n                    registration.unregister().then(() => {\n                        window.location.reload()\n                    })\n                })\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config)\n            }\n        })\n        .catch(() => {\n            console.log('No internet connection found. App is running in offline mode.')\n        })\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready\n            .then((registration) => {\n                registration.unregister()\n            })\n            .catch((error) => {\n                console.error(error.message)\n            })\n    }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport AppConnect from './components/App.connect'\nimport { HashRouter, Route } from 'react-router-dom'\nimport log from 'loglevel'\nimport { devSetup } from '@northarrowresearch/react-common'\n\nimport * as serviceWorker from './serviceWorker'\n// Here's our global overrides css\nimport './base.css'\n\n// This does its own process.env.NODE_ENV check\n// In production it only presents a minimal set of tools\ndevSetup()\n\n// This is the font we need\nrequire('typeface-roboto')\n\nReactDOM.render(\n    <HashRouter basename=\"/\">\n        <Route path=\"*\" render={(props): React.ReactElement => <AppConnect {...props} />} />\n    </HashRouter>,\n    document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register()\n\n// On android this will trick the back button into not closing the app\nwindow.addEventListener('load', () => {\n    window.history.pushState({}, '')\n})\n\n// In Chrome > 52 we need to explicitly request persistent storage to make sure our\n// stuff isn't cleaned up automatically.\nif (navigator.storage && navigator.storage.persist) {\n    navigator.storage.persist().then((granted) => {\n        if (granted) {\n            log.debug('Storage will not be cleared except by explicit user action')\n        } else {\n            log.warn('Storage may be cleared by the UA under storage pressure.')\n        }\n    })\n} else {\n    log.warn('navigator.storage API not implemented.')\n}\n"],"sourceRoot":""}